.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "C4::Scheduler 3pm"
.TH C4::Scheduler 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::Scheduler \- Module for running jobs with the unix at command
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use C4::Scheduler;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SH "METHODS"
.IX Header "METHODS"
.SS "\fBget_jobs()\fP;"
.IX Subsection "get_jobs();"
This will return all scheduled jobs
.SS "\fBget_at_jobs()\fP;"
.IX Subsection "get_at_jobs();"
This will return all At scheduled jobs
.SS "get_at_job($id)"
.IX Subsection "get_at_job($id)"
This will return the At job with the given id
.SS "add_at_job ($time,$command)"
.IX Subsection "add_at_job ($time,$command)"
Given a timestamp and a command this will schedule the job to run at that time.
.PP
Returns true if the job is added to the queue and false otherwise.
.SH "BUGS"
.IX Header "BUGS"
At some point \f(CW\*(C`C4::Scheduler\*(C'\fR should be refactored:
.ie n .IP "At and ""Schedule::At"" does not work on Win32." 4
.el .IP "At and \f(CWSchedule::At\fR does not work on Win32." 4
.IX Item "At and Schedule::At does not work on Win32."
.PD 0
.IP "At is not installed by default on all platforms." 4
.IX Item "At is not installed by default on all platforms."
.IP "The At queue used by Koha is owned by the httpd user.  If multiple Koha databases share an Apache instance on a server, everybody can see everybody's jobs." 4
.IX Item "The At queue used by Koha is owned by the httpd user. If multiple Koha databases share an Apache instance on a server, everybody can see everybody's jobs."
.IP "There is no support for scheduling a job to run more than once." 4
.IX Item "There is no support for scheduling a job to run more than once."
.PD
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Cormack <crc@liblime.com>
