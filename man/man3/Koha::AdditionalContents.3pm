.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::AdditionalContents 3pm"
.TH Koha::AdditionalContents 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::AdditionalContents \- Koha Additional content object set class
.SH "API"
.IX Header "API"
.SS "Class Methods"
.IX Subsection "Class Methods"
\fIsearch_for_display\fR
.IX Subsection "search_for_display"
.PP
my \f(CW$contents\fR = Koha::AdditionalContents\->search_for_display({
    category => 'news', # news or html_customizations
    location => 'slip',
    lang => 'es\-ES',
    library_id => \f(CW$branchcode\fR
})
.PP
Return Koha::AdditionalContents set for display to user
.PP
You can limit the results by location, language and library by optional params
.PP
library_id should be valid branchcode of defined library
.PP
location is one of this:
\&\- slip \- for \s-1ISSUESLIP\s0 notice
\&\- staff_only \- for intranet
\&\- opac_only \- for \s-1OPAC\s0
\&\- staff_and_opac \- for intranet and online catalogue
\&\- OpacNavRight \- Right column in the online catalogue
\&\- opacheader
\&\- OpacCustomSearch
\&\- OpacMainUserBlock
\&\- opaccredits
\&\- OpacLoginInstructions
\&\- OpacSuggestionInstructions
\&\- ArticleRequestsDisclaimerText
.PP
\fIfind_best_match\fR
.IX Subsection "find_best_match"
.PP
.Vb 3
\&    Koha::AdditionalContents\->find_best_match({
\&        category => , location => , lang => , library_id =>
\&    });
\&
\&    When choosing the best match, a match on lang and library is preferred.
\&    Next a match on library and default lang. Then match on All libs and lang.
\&    Finally a match with All libs and default lang.
.Ve
.PP
\fI_type\fR
.IX Subsection "_type"
.PP
\fIobject_class\fR
.IX Subsection "object_class"
.SH "AUTHOR"
.IX Header "AUTHOR"
Kyle M Hall <kyle@bywatersolutions.com>
