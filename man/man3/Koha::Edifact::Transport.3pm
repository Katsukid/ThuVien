.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Edifact::Transport 3pm"
.TH Koha::Edifact::Transport 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Edifact::Transport
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
my \f(CW$download\fR = Koha::Edifact::Transport\->new( \f(CW$vendor_edi_account_id\fR );
\&\f(CW$downlowd\fR\->download_messages('\s-1QUOTE\s0');
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Module that handles Edifact download and upload transport
currently can use sftp or ftp
Or \s-1FILE\s0 to access a local directory (useful for testing)
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
.Vb 2
\&    Creates an object of Edifact::Transport requires to be passed the id
\&    identifying the relevant edi vendor account
.Ve
.SS "working_directory"
.IX Subsection "working_directory"
.Vb 1
\&    getter and setter for the working_directory attribute
.Ve
.SS "download_messages"
.IX Subsection "download_messages"
.Vb 2
\&    called with the message type to download will perform the download
\&    using the appropriate transport method
.Ve
.SS "upload_messages"
.IX Subsection "upload_messages"
.Vb 1
\&   passed an array of messages will upload them to the supplier site
.Ve
.SS "sftp_download"
.IX Subsection "sftp_download"
.Vb 1
\&   called by download_messages to perform the download using SFTP
.Ve
.SS "ingest"
.IX Subsection "ingest"
.Vb 1
\&   loads downloaded files into the database
.Ve
.SS "ftp_download"
.IX Subsection "ftp_download"
.Vb 1
\&   called by download_messages to perform the download using FTP
.Ve
.SS "ftp_upload"
.IX Subsection "ftp_upload"
.Vb 1
\&  called by upload_messages to perform the upload using ftp
.Ve
.SS "sftp_upload"
.IX Subsection "sftp_upload"
.Vb 1
\&  called by upload_messages to perform the upload using sftp
.Ve
.SS "_abort_download"
.IX Subsection "_abort_download"
.Vb 1
\&   internal routine to halt operation on error and supply a stacktrace
.Ve
.SS "_get_file_ext"
.IX Subsection "_get_file_ext"
.Vb 2
\&   internal method returning standard suffix for file names
\&   according to message type
.Ve
.SS "set_transport_direct"
.IX Subsection "set_transport_direct"
.Vb 2
\&  sets the direct ingest flag so that the object reads files from
\&  the local file system useful in debugging
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 1
\&   Colin Campbell <colin.campbell@ptfs\-europe.com>
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.Vb 3
\&   Copyright 2014,2015 PTFS\-Europe Ltd
\&   This program is free software, You may redistribute it under
\&   under the terms of the GNU General Public License
.Ve
