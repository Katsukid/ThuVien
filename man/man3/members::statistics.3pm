.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "members::statistics 3pm"
.TH members::statistics 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "members/statistics.pl"
.IX Header "members/statistics.pl"
.Vb 1
\&  Generate statistic issues for a member
.Ve
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "add_actual_state"
.IX Subsection "add_actual_state"
.Vb 2
\&  Add a \*(Aqcount_actual_state\*(Aq key in all hashes
\&  count_actual_state = count_precedent_state \- count_total_issues_returned_today + count_total_issues_today
.Ve
.SS "build_array"
.IX Subsection "build_array"
.Vb 10
\&  Build a new array containing values of hashes.
\&  It used by template whitch display silly values.
\&  ex:
\&    $array = [
\&      {
\&        \*(Aqcount_total_issues_returned_today\*(Aq => 1,
\&        \*(Aqccode\*(Aq => \*(Aqccode\*(Aq,
\&        \*(Aqcount_actual_state\*(Aq => 1,
\&        \*(Aqcount_precedent_state\*(Aq => 1,
\&        \*(Aqhomebranch\*(Aq => \*(Aqhomebranch\*(Aq,
\&        \*(Aqcount_total_issues_today\*(Aq => 1,
\&        \*(Aqitype\*(Aq => \*(Aqitype\*(Aq
\&      }
\&    ];
\&  and returns:
\&    [
\&      [
\&        \*(Aqhomebranch\*(Aq,
\&        \*(Aqitype\*(Aq,
\&        \*(Aqccode\*(Aq,
\&        1,
\&        1,
\&        1,
\&        1
\&      ]
\&    ];
.Ve
.SS "merge"
.IX Subsection "merge"
.Vb 10
\&  Merge hashes with the same statistic column names into one
\&  param: array, a arrayref of arrayrefs
\&  ex:
\&  @array = (
\&     {
\&       \*(Aqccode\*(Aq => \*(Aqccode\*(Aq,
\&       \*(Aqcount_precedent_state\*(Aq => \*(Aq1\*(Aq,
\&       \*(Aqhomebranch\*(Aq => \*(Aqhomebranch\*(Aq,
\&       \*(Aqitype\*(Aq => \*(Aqitype\*(Aq
\&     },
\&     {
\&       \*(Aqcount_total_issues_returned_today\*(Aq => \*(Aq1\*(Aq,
\&       \*(Aqccode\*(Aq => \*(Aqccode\*(Aq,
\&       \*(Aqhomebranch\*(Aq => \*(Aqhomebranch\*(Aq,
\&       \*(Aqitype\*(Aq => \*(Aqitype\*(Aq
\&     }
\&   );
\&   and returns:
\&   [
\&     {
\&       \*(Aqcount_total_issues_returned_today\*(Aq => \*(Aq1\*(Aq,
\&       \*(Aqccode\*(Aq => \*(Aqccode\*(Aq,
\&       \*(Aqcount_precedent_state\*(Aq => \*(Aq1\*(Aq,
\&       \*(Aqhomebranch\*(Aq => \*(Aqhomebranch\*(Aq,
\&       \*(Aqitype\*(Aq => \*(Aqitype\*(Aq
\&     }
\&   ];
.Ve
