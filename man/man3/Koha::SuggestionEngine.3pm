.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::SuggestionEngine 3pm"
.TH Koha::SuggestionEngine 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::SuggestionEngine \- Dispatcher class for suggestion engines
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  use Koha::SuggestionEngine;
\&  my $suggestor = Koha::SuggestionEngine\->new(%params);
\&  $suggestor\->get_suggestions($search)
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Dispatcher class for retrieving suggestions. SuggestionEngines must
extend Koha::SuggestionEngine::Base, be in the Koha::SuggestionEngine::Plugin
namespace, and provide the following methods:
.PP
\&\fBget_suggestions ($search)\fR \- get suggestions from the plugin for the
specified search.
.PP
These methods may be overriden:
.PP
\&\fBinitialize (%params)\fR \- initialize the plugin
.PP
\&\fBdestroy ()\fR \- destroy the plugin
.PP
These methods should not be overridden unless you are very sure of what
you are doing:
.PP
\&\fBnew ()\fR \- create a new plugin object
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "new"
.IX Subsection "new"
.Vb 1
\&    my $suggestor = Koha::SuggestionEngine\->new(%params);
.Ve
.PP
Create a new suggestor class. Available parameters are:
.IP "\fBplugins\fR" 8
.IX Item "plugins"
What plugin(s) to use. This must be an arrayref to a list of plugins. Plugins
can be specified either with a complete class path, or, if they are in the
Koha::SuggestionEngine::Plugin namespace, as only the plugin name, and
\&\*(L"Koha::SuggestionEngine::Plugin\*(R" will be prepended to it before the plugin
is loaded.
.SS "get_suggestions"
.IX Subsection "get_suggestions"
.Vb 1
\&    my $suggestions = $suggester\->get_suggestions(\e%params)
.Ve
.PP
Get a list of suggestions based on the search passed in. Available parameters
are:
.IP "\fBsearch\fR" 8
.IX Item "search"
Required. The search for which suggestions are desired.
.IP "\fBcount\fR" 8
.IX Item "count"
Optional. The number of suggestions to retrieve. Defaults to 10.
.SS "AvailablePlugins"
.IX Subsection "AvailablePlugins"
.Vb 1
\&    my @available_plugins = Koha::SuggestionEngine::AvailablePlugins();
.Ve
.PP
Get a list of available plugins.
