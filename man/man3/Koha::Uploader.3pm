.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Uploader 3pm"
.TH Koha::Uploader 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Uploader \- Facilitate file uploads (temporary and permanent)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    use Koha::Uploader;
\&    use Koha::UploadedFile;
\&    use Koha::UploadedFiles;
\&
\&    # add an upload (see tools/upload\-file.pl)
\&    # the public flag allows retrieval via OPAC
\&    my $upload = Koha::Uploader\->new( public => 1, category => \*(AqA\*(Aq );
\&    my $cgi = $upload\->cgi;
\&    # Do something with $upload\->count, $upload\->result or $upload\->err
\&
\&    # get some upload records (in staff) via Koha::UploadedFiles
\&    my $uploads1 = Koha::UploadedFiles\->search({ filename => $name });
\&    my $uploads2 = Koha::UploadedFiles\->search_term({ term => $term });
\&
\&    # staff download (via Koha::UploadedFile[s])
\&    my $rec = Koha::UploadedFiles\->find( $id );
\&    my $fh = $rec\->file_handle;
\&    print Encode::encode_utf8( $input\->header( $rec\->httpheaders ) );
\&    while( <$fh> ) { print $_; }
\&    $fh\->close;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 4
\&    This module is a refactored version of C4::UploadedFile but adds on top
\&    of that the new functions from report 6874 (Upload plugin in editor).
\&    That report added module UploadedFiles.pm. This module contains the
\&    functionality of both.
\&
\&    The module has been revised to use Koha::Object[s]; the delete method
\&    has been moved to Koha::UploadedFile[s], as well as the get method.
.Ve
.SH "INSTANCE METHODS"
.IX Header "INSTANCE METHODS"
.SS "new"
.IX Subsection "new"
.Vb 4
\&    Returns new object based on Class::Accessor.
\&    Use tmp or temp flag for temporary storage.
\&    Use public flag to mark uploads as available in OPAC.
\&    The category parameter is only useful for permanent storage.
.Ve
.SS "cgi"
.IX Subsection "cgi"
.Vb 1
\&    Returns CGI object. The CGI hook is used to store the uploaded files.
.Ve
.SS "count"
.IX Subsection "count"
.Vb 1
\&    Returns number of uploaded files without errors
.Ve
.SS "result"
.IX Subsection "result"
.Vb 1
\&    Returns a string of id\*(Aqs for each successful upload separated by commas.
.Ve
.SS "err"
.IX Subsection "err"
.Vb 2
\&    Returns hashref with errors in format { file => { code => err }, ... }
\&    Undefined if there are no errors.
.Ve
.SH "CLASS METHODS"
.IX Header "CLASS METHODS"
.SS "allows_add_by"
.IX Subsection "allows_add_by"
.Vb 1
\&    allows_add_by checks if $userid has permission to add uploaded files
.Ve
.SH "INTERNAL ROUTINES"
.IX Header "INTERNAL ROUTINES"
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 2
\&    Koha Development Team
\&    Larger parts from Galen Charlton, Julian Maurice and Marcel de Rooy
.Ve
