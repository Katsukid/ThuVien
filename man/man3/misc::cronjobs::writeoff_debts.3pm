.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "misc::cronjobs::writeoff_debts 3pm"
.TH misc::cronjobs::writeoff_debts 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
writeoff_debts.pl
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  ./writeoff_debts.pl \-\-added_before DATE \-\-type OVERDUE \-\-file REPORT \-\-confirm
.Ve
.PP
This script batch waives debts.
.PP
The options to select the debt records to writeoff are cumulative. For
example, supplying both \-\-added_before and \-\-type specifies that the
accountline must meet both conditions to be selected for writeoff.
.PP
You must pass at least one of the filtering options for the script to run.
This is to prevent an accidental 'writeoff all' operation.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h|\-\-help\fR" 4
.IX Item "-h|--help"
Prints this help message
.IP "\fB\-\-added\-before\fR" 4
.IX Item "--added-before"
Writeoff debts added before the date passed.
.Sp
Dates should be in \s-1ISO\s0 format, e.g., 2013\-07\-19, and can be generated
with `date \-d '\-3 month' \-\-iso\-8601`.
.IP "\fB\-\-added\-after\fR" 4
.IX Item "--added-after"
Writeoff debts added after the date passed.
.Sp
Dates should be in \s-1ISO\s0 format, e.g., 2013\-07\-19, and can be generated
with `date \-d '\-3 month' \-\-iso\-8601`.
.IP "\fB\-\-type\fR" 4
.IX Item "--type"
Writeoff debts of the passed type. Accepts a list of CREDIT_TYPE_CODEs.
.IP "\fB\-\-file\fR" 4
.IX Item "--file"
Writeoff debts passed as one accountlines_id per line in this file. If other
criteria are defined it will only writeoff those in the file that match those
criteria.
.IP "\fB\-v|\-\-verbose\fR" 4
.IX Item "-v|--verbose"
This flag set the script to output logging for the actions it will perform.
.IP "\fB\-c|\-\-confirm\fR" 4
.IX Item "-c|--confirm"
This flag must be provided in order for the script to actually
writeoff debts.  If it is not supplied, the script will
only report on the accountline records it would have been written off.
.SH "AUTHOR"
.IX Header "AUTHOR"
Martin Renvoize <martin.renvoize@ptfs\-europe.com>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2020 \s-1PTFS\s0 Europe
.SH "LICENSE"
.IX Header "LICENSE"
This file is part of Koha.
.PP
Koha is free software; you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.
.PP
Koha is distributed in the hope that it will be useful, but
\&\s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0 See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with Koha; if not, see <http://www.gnu.org/licenses>.
.SH "DISCLAIMER OF WARRANTY"
.IX Header "DISCLAIMER OF WARRANTY"
Koha is distributed in the hope that it will be useful, but \s-1WITHOUT ANY
WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR
A PARTICULAR PURPOSE.\s0  See the \s-1GNU\s0 General Public License for more details.
