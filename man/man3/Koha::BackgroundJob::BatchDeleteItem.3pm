.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::BackgroundJob::BatchDeleteItem 3pm"
.TH Koha::BackgroundJob::BatchDeleteItem 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::BackgroundJob::BatchDeleteItem \- Background job derived class to process item deletion in batch
.SH "API"
.IX Header "API"
.SS "Class methods"
.IX Subsection "Class methods"
\fIjob_type\fR
.IX Subsection "job_type"
.PP
Return the job type 'batch_item_record_deletion'.
.PP
\fIprocess\fR
.IX Subsection "process"
.PP
.Vb 6
\&    Koha::BackgroundJobs\->find($id)\->process(
\&        {
\&            record_ids => \e@itemnumbers,
\&            deleted_biblios => 0|1,
\&        }
\&    );
.Ve
.PP
Will delete all the items that have been passed for deletion.
.PP
When deleted_biblios is passed, if we deleted the last item of a biblio,
the bibliographic record will be deleted as well.
.PP
The search engine's index will be updated according to the changes made
to the deleted bibliographic recods.
.PP
The generated report will be:
  {
    deleted_itemnumbers => \e@list_of_itemnumbers,
    not_deleted_itemnumbers => \e@list_of_itemnumbers,
    deleted_biblionumbers=> \e@list_of_biblionumbers,
  }
.PP
\fIenqueue\fR
.IX Subsection "enqueue"
.PP
.Vb 6
\&    Koha::BackgroundJob::BatchDeleteItem\->new\->enqueue(
\&        {
\&            record_ids => \e@itemnumbers,
\&            deleted_biblios => 0|1,
\&        }
\&    );
.Ve
.PP
Enqueue the job.
