.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "C4::ItemCirculationAlertPreference 3pm"
.TH C4::ItemCirculationAlertPreference 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::ItemCirculationAlertPreference \- manage preferences for sending alerts
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Basics:
.PP
.Vb 1
\&    use C4::ItemCirculationAlertPreference;
\&
\&    # a short\-cut to reduce typing the long package name over and over again
\&    my $preferences = \*(AqC4::ItemCirculationAlertPreference\*(Aq;
.Ve
.PP
Creating a restriction on sending messages:
.PP
.Vb 6
\&    my $pref = $preferences\->create({
\&        branchcode   => \*(AqCPL\*(Aq,
\&        categorycode => \*(AqYA\*(Aq,
\&        item_type    => \*(AqBK\*(Aq,
\&        notification => \*(AqCHECKOUT\*(Aq,
\&    });
.Ve
.PP
Removing a restriction on sending messages:
.PP
.Vb 6
\&    $preferences\->delete({
\&        branchcode   => \*(AqCPL\*(Aq,
\&        categorycode => \*(AqYA\*(Aq,
\&        item_type    => \*(AqBK\*(Aq,
\&        notification => \*(AqCHECKOUT\*(Aq,
\&    });
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class is used to manage the preferences for when an alert may be sent.  By
default, item circulation alerts are enabled for every \fBbranch\fR, \fBpatron
category\fR and \fBitem type\fR.
.PP
However, if you would like to prevent item circulation alerts from being sent
for any combination of these 3 variables, a preference can be inserted into the
\&\f(CW\*(C`item_circulation_alert_preferences\*(C'\fR table to make that a policy.
.SH "API"
.IX Header "API"
.SS "Class Methods"
.IX Subsection "Class Methods"
\fIC4::ItemCirculationAlertPreference\->new(\e%opts)\fR
.IX Subsection "C4::ItemCirculationAlertPreference->new(%opts)"
.PP
This is a constructor for an in-memory C4::ItemCirculationAlertPreference
object.  The database is not affected by this method.
.PP
\fIC4::ItemCirculationAlertPreference\->create(\e%opts)\fR
.IX Subsection "C4::ItemCirculationAlertPreference->create(%opts)"
.PP
This will find or create an item circulation alert preference.  You must pass
it a \fBbranchcode\fR, \fBcategorycode\fR, \fBitem_type\fR, and \fBnotification\fR.  Valid
values for these attributes are as follows:
.IP "branchcode" 4
.IX Item "branchcode"
branches.branchcode
.IP "categorycode" 4
.IX Item "categorycode"
category.categorycode
.IP "item_type" 4
.IX Item "item_type"
itemtypes.itemtype
.IP "notification" 4
.IX Item "notification"
This can be \*(L"\s-1CHECKIN\*(R"\s0 or \*(L"\s-1CHECKOUT\*(R"\s0
.PP
\fIC4::ItemCirculationAlertPreference\->delete(\e%opts)\fR
.IX Subsection "C4::ItemCirculationAlertPreference->delete(%opts)"
.PP
Delete an item circulation alert preference.  You can delete by either passing
in an \fBid\fR or passing in a \fBbranchcode\fR, \fBcategorycode\fR, \fBitem_type\fR
triplet.
.PP
\fIC4::ItemCirculationAlertPreference\->is_enabled_for(\e%opts)\fR
.IX Subsection "C4::ItemCirculationAlertPreference->is_enabled_for(%opts)"
.PP
Based on the existing preferences in the \f(CW\*(C`item_circulation_alert_preferences\*(C'\fR
table, can an alert be sent for the given \fBbranchcode\fR, \fBcategorycode\fR, and
\&\fBitemtype\fR?
.PP
\&\fBExample\fR:
.PP
.Vb 6
\&    my $alert = \*(AqC4::ItemCirculationAlertPreference\*(Aq;
\&    my $conditions = {
\&        branchcode   => \*(AqCPL\*(Aq,
\&        categorycode => \*(AqIL\*(Aq,
\&        item_type    => \*(AqMU\*(Aq,
\&    };
\&
\&    if ($alert\->is_enabled_for($conditions)) {
\&        # ...
\&    }
.Ve
.PP
\fIC4::ItemCirculationAlertPreference\->find({ branchcode => \f(CI$bc\fI, notification => \f(CI$type\fI })\fR
.IX Subsection "C4::ItemCirculationAlertPreference->find({ branchcode => $bc, notification => $type })"
.PP
This method returns all the item circulation alert preferences for a given
branch and notification.
.PP
\&\fBExample\fR:
.PP
.Vb 4
\&    my @branch_prefs = C4::ItemCirculationAlertPreference\->find({
\&        branchcode   => \*(AqCPL\*(Aq,
\&        notification => \*(AqCHECKIN\*(Aq,
\&    });
.Ve
.PP
\fIC4::ItemCirculationAlertPreference\->grid({ branchcode => \f(CI$c\fI, notification => \f(CI$type\fI })\fR
.IX Subsection "C4::ItemCirculationAlertPreference->grid({ branchcode => $c, notification => $type })"
.PP
Return a 2D arrayref for the grid view in \fIadmin/item_circulation_alert_preferences.pl\fR.
Each row represents a category (like 'Patron' or 'Young Adult') and
each column represents an itemtype (like 'Book' or 'Music').
.PP
Each cell contains...
.PP
\&\fBExample\fR:
.PP
.Vb 6
\&    use Data::Dump \*(Aqpp\*(Aq;
\&    my $grid = C4::ItemCirculationAlertPreference\->grid({
\&        branchcode   => \*(AqCPL\*(Aq,
\&        notification => \*(AqCHECKOUT\*(Aq,
\&    });
\&    warn pp($grid);
.Ve
.PP
See \fIadmin/item_circulation_alerts.pl\fR to see how this method is used.
.SS "Object Methods"
.IX Subsection "Object Methods"
These are read-only accessors for the various attributes of a preference.
.PP
\fI\f(CI$pref\fI\->id\fR
.IX Subsection "$pref->id"
.PP
\fI\f(CI$pref\fI\->branchcode\fR
.IX Subsection "$pref->branchcode"
.PP
\fI\f(CI$pref\fI\->categorycode\fR
.IX Subsection "$pref->categorycode"
.PP
\fI\f(CI$pref\fI\->item_type\fR
.IX Subsection "$pref->item_type"
.PP
\fI\f(CI$pref\fI\->notification\fR
.IX Subsection "$pref->notification"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
C4::Circulation, \fIadmin/item_circulation_alerts.pl\fR
.SH "AUTHOR"
.IX Header "AUTHOR"
John Beppu <john.beppu@liblime.com>
