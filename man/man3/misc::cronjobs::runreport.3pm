.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "misc::cronjobs::runreport 3pm"
.TH misc::cronjobs::runreport 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
runreport.pl \- Run pre\-existing saved reports
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
runreport.pl [ \-h | \-m ] [ \-v ] reportID [ reportID ... ]
.PP
.Vb 4
\& Options:
\&   \-h \-\-help       brief help message
\&   \-m \-\-man        full documentation, same as \-\-help \-\-verbose
\&   \-v \-\-verbose    verbose output
\&
\&   \-\-format=s      selects format. Choice of text, html, csv or tsv
\&
\&   \-e \-\-email      whether to use e\-mail (implied by \-\-to or \-\-from)
\&   \-a \-\-attachment additionally attach the report as a file. cannot be used with html format
\&   \-\-username      username to pass to the SMTP server for authentication
\&   \-\-password      password to pass to the SMTP server for authentication
\&   \-\-method        method is the type of authentication. Ie. LOGIN, DIGEST\-MD5, etc.
\&   \-\-to=s          e\-mail address to send report to
\&   \-\-from=s        e\-mail address to send report from
\&   \-\-subject=s     subject for the e\-mail
\&   \-\-param=s      parameters for the report
\&   \-\-store\-results store the result of the report
\&   \-\-csv\-header    add column names as first line of csv output
\&
\&
\& Arguments:
\&   reportID        report ID Number from saved_sql.id, multiple ID\*(Aqs may be specified
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Print a brief help message and exits.
.IP "\fB\-\-man\fR" 4
.IX Item "--man"
Prints the manual page and exits.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Verbose. Without this flag set, only fatal errors are reported.
.IP "\fB\-\-format\fR" 4
.IX Item "--format"
Current options are text, html, csv, and tsv. At the moment, text and tsv both produce tab-separated output.
.IP "\fB\-\-separator\fR" 4
.IX Item "--separator"
Separator character, only for csv format. Default to comma.
.IP "\fB\-\-email\fR" 4
.IX Item "--email"
Whether to use e\-mail (implied by \-\-to or \-\-from).
.IP "\fB\-\-username\fR" 4
.IX Item "--username"
Username to pass to the \s-1SMTP\s0 server for authentication
.IP "\fB\-\-password\fR" 4
.IX Item "--password"
Password to pass to the \s-1SMTP\s0 server for authentication
.IP "\fB\-\-method\fR" 4
.IX Item "--method"
Method is the type of authentication. Ie. \s-1LOGIN, DIGEST\-MD5,\s0 etc.
.IP "\fB\-\-to\fR" 4
.IX Item "--to"
E\-mail address to send report to. Defaults to KohaAdminEmailAddress.
.IP "\fB\-\-from\fR" 4
.IX Item "--from"
E\-mail address to send report from. Defaults to KohaAdminEmailAddress.
.IP "\fB\-\-subject\fR" 4
.IX Item "--subject"
Subject for the e\-mail message. Defaults to \*(L"Koha Saved Report\*(R"
.IP "\fB\-\-param\fR" 4
.IX Item "--param"
Repeatable, should provide one param per param requested for the report.
Report params are not combined as on the staff side, so you may need to repeat
params.
.IP "\fB\-\-store\-results\fR" 4
.IX Item "--store-results"
Store the result of the report into the saved_reports \s-1DB\s0 table.
.Sp
To access the results, go on Reports > Guided reports > Saved report.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script is designed to run existing Saved Reports.
.SH "USAGE EXAMPLES"
.IX Header "USAGE EXAMPLES"
\&\fBrunreport.pl 16\fR
.PP
In the most basic form, runs the report specified by \s-1ID\s0 number from 
saved_sql.id, in this case #16, outputting the results to \s-1STDOUT.\s0
.PP
\&\fBrunreport.pl 16 17\fR
.PP
Same as above, but also runs report #17.
.SH "TO DO"
.IX Header "TO DO"
.IP "\(bu" 4
Allow Saved Results option.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Reports \- Guided Reports
