.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Filter::MARC::ViewPolicy 3pm"
.TH Koha::Filter::MARC::ViewPolicy 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Filter::MARC::ViewPolicy \- this filters a MARC record.
.SH "VERSION"
.IX Header "VERSION"
version 1.0
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
my \f(CW$processor\fR = Koha::RecordProcessor\->new( { filters => ('ViewPolicy') } );
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Filter to remove fields based on the 'Advance constraints'
settings found when editing a particular subfield definition of
a \s-1MARC\s0 bibliographic framework found under the Koha administration
menu.
.SH "SUBROUTINES/METHODS"
.IX Header "SUBROUTINES/METHODS"
.SS "filter"
.IX Subsection "filter"
.Vb 4
\&    my $processor = Koha::RecordProcessor\->new( { filters => (\*(AqViewPolicy\*(Aq) } );
\&...
\&    my $newrecord = $processor\->filter($record);
\&    my $newrecords = $processor\->filter(\e@records);
.Ve
.PP
This returns a filtered copy of the record based on the Advanced constraints
visibility settings.
.SS "should_hide_marc"
.IX Subsection "should_hide_marc"
Return a hash reference of whether a field, built from
kohafield and tag, is hidden (1) or not (0) for a given
interface
.PP
.Vb 5
\&  my $OpacHideMARC =
\&    should_hide_marc( {
\&                        frameworkcode => $frameworkcode,
\&                        interface     => \*(Aqopac\*(Aq,
\&                      } );
\&
\&  if ($OpacHideMARC\->{\*(Aqstocknumber\*(Aq}==1) {
\&       print "Hidden!\en";
\&  }
.Ve
.PP
\&\f(CW$OpacHideMARC\fR is a ref to a hash which contains a series
of key value pairs indicating if that field (key) is
hidden (value == 1) or not (value == 0).
.PP
\&\f(CW$frameworkcode\fR is the framework code.
.PP
\&\f(CW$interface\fR is the interface. It defaults to 'opac' if
nothing is passed. Valid values include 'opac' or 'intranet'.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.Vb 2
\& $ prove \-v t/RecordProcessor.t
\& $ prove \-v t/db_dependent/Filter_MARC_ViewPolicy.t
.Ve
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
Install Koha. This filter will be used appropriately by the \s-1OPAC\s0 or staff interface.
.SH "INCOMPATIBILITIES"
.IX Header "INCOMPATIBILITIES"
This is designed for MARC::Record filtering currently. It will not handle \s-1MARC::MARCXML.\s0
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
The following Perl libraries are required: Modern::Perl and Carp.
The following Koha libraries are required: C4::Biblio, Koha::RecordProcessor, and Koha::RecordProcessor::Base.
These should all be installed if the koha-common package is installed or Koha is otherwise installed.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
This is the initial version. Please feel free to report bugs
at http://bugs.koha\-community.org/.
.SH "AUTHOR"
.IX Header "AUTHOR"
Mark Tompsett
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2015 Mark Tompsett
.PP
This file is part of Koha.
.PP
Koha is free software; you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.
.PP
Koha is distributed in the hope that it will be useful, but
\&\s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0 See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with Koha; if not, see <http://www.gnu.org/licenses>.
