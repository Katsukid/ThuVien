.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Acquisition::Basket 3pm"
.TH Koha::Acquisition::Basket 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Acquisition::Basket \- Koha Basket Object class
.SH "API"
.IX Header "API"
.SS "Class methods"
.IX Subsection "Class methods"
\fIbookseller\fR
.IX Subsection "bookseller"
.PP
Returns the vendor
.PP
\fIcreator\fR
.IX Subsection "creator"
.PP
.Vb 1
\&    my $creator = $basket\->creator;
.Ve
.PP
Returns the \fIKoha::Patron\fR for the basket creator.
.PP
\fIbasket_group\fR
.IX Subsection "basket_group"
.PP
Returns the basket group associated to this basket
.PP
\fIorders\fR
.IX Subsection "orders"
.PP
.Vb 1
\&    my $orders = $basket\->orders;
.Ve
.PP
Returns a Koha::Acquisition::Orders resultset, with the orders linked
to this basket.
.PP
\fIedi_order\fR
.IX Subsection "edi_order"
.PP
.Vb 1
\&  my $edi_order = $basket\->edi_order;
.Ve
.PP
Returns the most recently attached \s-1EDI\s0 order object if one exists for the basket.
.PP
\&\s-1NOTE:\s0 This currently returns a bare DBIx::Class result or undefined. This is consistent with the rest of \s-1EDI\s0;
However it would be beneficial to convert these to full fledge Koha::Objects in the future.
.PP
\fIeffective_create_items\fR
.IX Subsection "effective_create_items"
.PP
Returns \f(CW\*(C`create_items\*(C'\fR for this basket, falling back to \f(CW\*(C`AcqCreateItem\*(C'\fR if unset.
.PP
\fIestimated_delivery_date\fR
.IX Subsection "estimated_delivery_date"
.PP
my \f(CW$estimated_delivery_date\fR = \f(CW$basket\fR\->estimated_delivery_date;
.PP
Return the estimated delivery date for this basket.
.PP
It is calculated adding the delivery time of the vendor to the close date of this basket.
.PP
Return implicit undef if the basket is not closed, or the vendor does not have a delivery time.
.PP
\fIlate_since_days\fR
.IX Subsection "late_since_days"
.PP
my \f(CW$number_of_days_late\fR = \f(CW$basket\fR\->late_since_days;
.PP
Return the number of days the basket is late.
.PP
Return implicit undef if the basket is not closed.
.PP
\fIauthorizer\fR
.IX Subsection "authorizer"
.PP
my \f(CW$authorizer\fR = \f(CW$basket\fR\->authorizer;
.PP
Returns the patron who authorized/created this basket.
.PP
\fIis_closed\fR
.IX Subsection "is_closed"
.PP
.Vb 1
\&    if ( $basket\->is_closed ) { ... }
.Ve
.PP
Returns a boolean value representing if the basket is closed.
.PP
\fIclose\fR
.IX Subsection "close"
.PP
.Vb 1
\&    $basket\->close;
.Ve
.PP
Close the basket and mark all open orders as ordered.
.PP
A \fIKoha::Exceptions::Acquisition::Basket::AlreadyClosed\fR exception is thrown
if the basket is already closed.
.PP
\fIto_api\fR
.IX Subsection "to_api"
.PP
.Vb 1
\&    my $json = $basket\->to_api;
.Ve
.PP
Overloaded method that returns a \s-1JSON\s0 representation of the Koha::Acquisition::Basket object,
suitable for \s-1API\s0 output.
.PP
\fIto_api_mapping\fR
.IX Subsection "to_api_mapping"
.PP
This method returns the mapping for representing a Koha::Acquisition::Basket object
on the \s-1API.\s0
.SS "Internal methods"
.IX Subsection "Internal methods"
\fI_type\fR
.IX Subsection "_type"
.SH "AUTHOR"
.IX Header "AUTHOR"
Aleisha Amohia <aleisha@catalyst.net.nz>
Catalyst \s-1IT\s0
