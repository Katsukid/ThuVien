.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Schema::Result::Illrequest 3pm"
.TH Koha::Schema::Result::Illrequest 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Schema::Result::Illrequest
.ie n .SH "TABLE: ""illrequests"""
.el .SH "TABLE: \f(CWillrequests\fP"
.IX Header "TABLE: illrequests"
.SH "ACCESSORS"
.IX Header "ACCESSORS"
.SS "illrequest_id"
.IX Subsection "illrequest_id"
.Vb 4
\&  data_type: \*(Aqbigint\*(Aq
\&  extra: {unsigned => 1}
\&  is_auto_increment: 1
\&  is_nullable: 0
.Ve
.PP
\&\s-1ILL\s0 request number
.SS "borrowernumber"
.IX Subsection "borrowernumber"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.PP
Patron associated with request
.SS "biblio_id"
.IX Subsection "biblio_id"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.PP
Potential bib linked to request
.SS "deleted_biblio_id"
.IX Subsection "deleted_biblio_id"
.Vb 2
\&  data_type: \*(Aqinteger\*(Aq
\&  is_nullable: 1
.Ve
.PP
Deleted bib linked to request
.SS "due_date"
.IX Subsection "due_date"
.Vb 3
\&  data_type: \*(Aqdatetime\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
Custom date due specified by backend, leave \s-1NULL\s0 for default date_due calculation
.SS "branchcode"
.IX Subsection "branchcode"
.Vb 4
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 0
\&  size: 50
.Ve
.PP
The branch associated with the request
.SS "status"
.IX Subsection "status"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 50
.Ve
.PP
Current Koha status of request
.SS "status_alias"
.IX Subsection "status_alias"
.Vb 4
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
\&  size: 80
.Ve
.PP
Foreign key to relevant authorised_values.authorised_value
.SS "placed"
.IX Subsection "placed"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
Date the request was placed
.SS "replied"
.IX Subsection "replied"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
Last \s-1API\s0 response
.SS "updated"
.IX Subsection "updated"
.Vb 4
\&  data_type: \*(Aqtimestamp\*(Aq
\&  datetime_undef_if_invalid: 1
\&  default_value: current_timestamp
\&  is_nullable: 0
.Ve
.SS "completed"
.IX Subsection "completed"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
Date the request was completed
.SS "medium"
.IX Subsection "medium"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 30
.Ve
.PP
The Koha request type
.SS "accessurl"
.IX Subsection "accessurl"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 500
.Ve
.PP
Potential \s-1URL\s0 for accessing item
.SS "cost"
.IX Subsection "cost"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 20
.Ve
.PP
Quotes cost of request
.SS "price_paid"
.IX Subsection "price_paid"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 20
.Ve
.PP
Final cost of request
.SS "notesopac"
.IX Subsection "notesopac"
.Vb 2
\&  data_type: \*(Aqmediumtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
Patron notes attached to request
.SS "notesstaff"
.IX Subsection "notesstaff"
.Vb 2
\&  data_type: \*(Aqmediumtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
Staff notes attached to request
.SS "orderid"
.IX Subsection "orderid"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 50
.Ve
.PP
Backend id attached to request
.SS "backend"
.IX Subsection "backend"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 20
.Ve
.PP
The backend used to create request
.SH "PRIMARY KEY"
.IX Header "PRIMARY KEY"
.IP "\(bu" 4
\&\*(L"illrequest_id\*(R"
.SH "RELATIONS"
.IX Header "RELATIONS"
.SS "biblio"
.IX Subsection "biblio"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Biblio
.SS "borrowernumber"
.IX Subsection "borrowernumber"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Borrower
.SS "branchcode"
.IX Subsection "branchcode"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Branch
.SS "illcomments"
.IX Subsection "illcomments"
Type: has_many
.PP
Related object: Koha::Schema::Result::Illcomment
.SS "illrequestattributes"
.IX Subsection "illrequestattributes"
Type: has_many
.PP
Related object: Koha::Schema::Result::Illrequestattribute
.SS "status_alias"
.IX Subsection "status_alias"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::AuthorisedValue
