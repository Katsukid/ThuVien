.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "misc::maintenance::fix_accountlines_date 3pm"
.TH misc::maintenance::fix_accountlines_date 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
fix_accountlines_date.pl \- Fix date code in the description of fines
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
fix_accountlines_date.pl \-m date_format [ \-n fines_to_process ] [ \-d ] [ \-\-help or \-h ]
.PP
.Vb 8
\& Options:
\&   \-\-help or \-h                Brief usage message
\&   \-\-man                       Full documentation
\&   \-n fines_to_process         How many fines to process; if left off will
\&                               process all
\&   \-m date_format              What format the dates are currently in; \*(Aqus\*(Aq
\&                               or \*(Aqmetric\*(Aq (REQUIRED)
\&   \-d                          Run in debugging mode
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script fixes the date code in the description of fines. Previously, the
format of this was determined by which script you were using to update fines (see the \-m option)
.IP "\fB\-\-help\fR" 8
.IX Item "--help"
Prints a brief usage message and exits.
.IP "\fB\-\-man\fR" 8
.IX Item "--man"
Prints a full manual page and exits.
.IP "\fB\-n\fR" 8
.IX Item "-n"
Process only a certain amount of fines. If this option is left off, this script
will process everything.
.IP "\fB\-m\fR" 8
.IX Item "-m"
This required option tells the script what format your dates are currently in.
If you were previously using the fines2.pl or fines\-sanop.pl script to update 
your fines, they will be in 'metric' format. If you were using the fines\-ll.pl
script, they will be in 'us' format. After this script is finished, they will
be in whatever format your 'dateformat' system preference specifies.
.IP "\fB\-d\fR" 8
.IX Item "-d"
Run in debugging mode; this prints out a lot of information and should be used
only if there is a problem and with the '\-n' option.
