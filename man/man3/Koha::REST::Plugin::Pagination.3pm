.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::REST::Plugin::Pagination 3pm"
.TH Koha::REST::Plugin::Pagination 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::REST::Plugin::Pagination
.SH "API"
.IX Header "API"
.SS "Mojolicious::Plugin methods"
.IX Subsection "Mojolicious::Plugin methods"
\fIregister\fR
.IX Subsection "register"
.SS "Helper methods"
.IX Subsection "Helper methods"
\fIadd_pagination_headers\fR
.IX Subsection "add_pagination_headers"
.PP
.Vb 10
\&    $c\->add_pagination_headers();
\&    $c\->add_pagination_headers(
\&        {
\&            base_total   => $base_total,
\&            page         => $page,
\&            per_page     => $per_page,
\&            query_params => $query_params,
\&            total        => $total,
\&        }
\&    );
.Ve
.PP
Adds \s-1RFC5988\s0 compliant \fILink\fR headers for pagination to the response message carried
by our controller.
.PP
Additionally, it also adds the customer \fIX\-Total-Count\fR header containing the total results
count, and \fIX\-Base-Total-Count\fR header containing the total of the non-filtered results count.
.PP
Optionally accepts the any of the following parameters to override the values stored in the
stash by the \fIsearch_rs\fR helper.
.IP "base_total" 4
.IX Item "base_total"
Total records for the search domain (e.g. all patron records, filtered only by visibility)
.IP "page" 4
.IX Item "page"
The requested page number, usually extracted from the request query.
See \fIobjects.search_rs\fR for more information.
.IP "per_page" 4
.IX Item "per_page"
The requested maximum results per page, usually extracted from the request query.
See \fIobjects.search_rs\fR for more information.
.IP "query_params" 4
.IX Item "query_params"
The request query, usually extracted from the request query and used to build the \fILink\fR headers.
See \fIobjects.search_rs\fR for more information.
.IP "total" 4
.IX Item "total"
Total records for the search with filters applied.
.PP
\fIdbic_merge_pagination\fR
.IX Subsection "dbic_merge_pagination"
.PP
.Vb 7
\&    $filter = $c\->dbic_merge_pagination({
\&        filter => $filter,
\&        params => {
\&            page     => $params\->{_page},
\&            per_page => $params\->{_per_page}
\&        }
\&    });
.Ve
.PP
Adds \fIpage\fR and \fIrows\fR elements to the filter parameter.
.SS "Internal methods"
.IX Subsection "Internal methods"
\fI_build_link\fR
.IX Subsection "_build_link"
.PP
.Vb 1
\&    my $link = _build_link( $c, { page => 1, per_page => 5, rel => \*(Aqprev\*(Aq });
.Ve
.PP
Returns a string, suitable for using in Link headers following \s-1RFC5988.\s0
