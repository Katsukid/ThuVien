.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "misc::export_records 3pm"
.TH misc::export_records 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
export records \- This script exports record (biblios or authorities)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
export_records.pl [\-h|\-\-help] [\-\-format=format] [\-\-date=datetime] [\-\-record\-type=TYPE] [\-\-dont_export_items] [\-\-deleted_barcodes] [\-\-clean] [\-\-id_list_file=PATH] \-\-filename=outputfile
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h|\-\-help\fR" 4
.IX Item "-h|--help"
Print a brief help message.
.IP "\fB\-\-format\fR" 4
.IX Item "--format"
.Vb 1
\& \-\-format=FORMAT        FORMAT is either \*(Aqxml\*(Aq, \*(Aqcsv\*(Aq (biblio records only) or \*(Aqmarc\*(Aq (default).
.Ve
.IP "\fB\-\-date\fR" 4
.IX Item "--date"
.Vb 4
\& \-\-date=DATETIME        DATETIME should be entered as the \*(Aqdateformat\*(Aq syspref is
\&                        set (dd/mm/yyyy[ hh:mm:ss] for metric, yyyy\-mm\-dd[ hh:mm:ss] for iso,
\&                        dd/mm/yyyy[ hh:mm:ss] for us) records exported are the ones that
\&                        have been modified since DATETIME.
.Ve
.IP "\fB\-\-record\-type\fR" 4
.IX Item "--record-type"
.Vb 1
\& \-\-record\-type=TYPE     TYPE is \*(Aqbibs\*(Aq or \*(Aqauths\*(Aq.
.Ve
.IP "\fB\-\-dont_export_items\fR" 4
.IX Item "--dont_export_items"
.Vb 1
\& \-\-dont_export_items    If enabled, the item infos won\*(Aqt be exported.
.Ve
.IP "\fB\-\-csv_profile_id\fR" 4
.IX Item "--csv_profile_id"
.Vb 2
\& \-\-csv_profile_id=ID    Generate a CSV file with the given CSV profile id (see tools/csv\-profiles.pl)
\&                        This can only be used to export biblio records.
.Ve
.IP "\fB\-\-deleted_barcodes\fR" 4
.IX Item "--deleted_barcodes"
.Vb 3
\& \-\-deleted_barcodes     If used, a list of barcodes of items deleted since DATE
\&                        is produced (or from all deleted items if no date is
\&                        specified). Used only if TYPE is \*(Aqbibs\*(Aq.
.Ve
.IP "\fB\-\-clean\fR" 4
.IX Item "--clean"
.Vb 1
\& \-\-clean                removes NSE/NSB.
.Ve
.IP "\fB\-\-id_list_file\fR" 4
.IX Item "--id_list_file"
.Vb 4
\& \-\-id_list_file=PATH    PATH is a path to a file containing a list of
\&                        IDs (biblionumber or authid) with one ID per line.
\&                        This list works as a filter; it is compatible with
\&                        other parameters for selecting records.
.Ve
.IP "\fB\-\-filename\fR" 4
.IX Item "--filename"
.Vb 1
\& \-\-filename=FILENAME   FILENAME used to export the data.
.Ve
.IP "\fB\-\-starting_authid\fR" 4
.IX Item "--starting_authid"
.Vb 1
\& \-\-starting_authid=ID  Export authorities with authid >= ID
.Ve
.IP "\fB\-\-ending_authid\fR" 4
.IX Item "--ending_authid"
.Vb 1
\& \-\-ending_authid=ID    Export authorities with authid <= ID
.Ve
.IP "\fB\-\-authtype\fR" 4
.IX Item "--authtype"
.Vb 1
\& \-\-authtype=AUTHTYPE   Export authorities from the given AUTHTYPE
.Ve
.IP "\fB\-\-starting_biblionumber\fR" 4
.IX Item "--starting_biblionumber"
.Vb 1
\& \-\-starting_biblionumber=ID  Export biblio with biblionumber >= ID
.Ve
.IP "\fB\-\-ending_biblionumber\fR" 4
.IX Item "--ending_biblionumber"
.Vb 1
\& \-\-ending_biblionumber=ID    Export biblio with biblionumber <= ID
.Ve
.IP "\fB\-\-itemtype\fR" 4
.IX Item "--itemtype"
.Vb 1
\& \-\-itemtype=ITEMTYPE         Export biblio from the given ITEMTYPE
.Ve
.IP "\fB\-\-starting_callnumber\fR" 4
.IX Item "--starting_callnumber"
.Vb 1
\& \-\-starting_callnumber=CALLNUMBER Export biblio with callnumber >=CALLNUMBER
.Ve
.IP "\fB\-\-ending_callnumber\fR" 4
.IX Item "--ending_callnumber"
.Vb 1
\& \-\-ending_callnumber=CALLNUMBER Export biblio with callnumber <=CALLNUMBER
.Ve
.IP "\fB\-\-start_accession\fR" 4
.IX Item "--start_accession"
.Vb 1
\& \-\-starting_accession=DATE      Export biblio with an item accessionned after DATE
.Ve
.IP "\fB\-\-end_accession\fR" 4
.IX Item "--end_accession"
.Vb 1
\& \-\-end_accession=DATE           Export biblio with an item accessionned after DATE
.Ve
.IP "\fB\-\-marc_conditions\fR" 4
.IX Item "--marc_conditions"
.Vb 10
\& \-\-marc_conditions=CONDITIONS   Only include biblios with MARC data matching CONDITIONS.
\&                                CONDITIONS is on the format: <marc_target><binary_operator><value>,
\&                                or <unary_operation>(<marc_target>).
\&                                with multiple conditions separated by commas (,).
\&                                For example: \-\-marc_conditions="035a!=(EXAMPLE)123,041a=swe".
\&                                Multiple conditions are all required to match.
\&                                If <marc_target> has multiple values all values
\&                                are also required to match.
\&                                Valid operators are: = (equal to), != (not equal to),
\&                                > (great than) and < (less than).
\&
\&                                Two unary operations are also supported:
\&                                exists(<marc_target>) and not_exists(<marc_target>).
\&                                For example: \-\-marc_conditions="exists(035a)".
\&
\&                                "exists(<marc_target)" will include marc records where
\&                                <marc_target> exists regardless of target value, and
\&                                "exists(<marc_target>)" will include marc records where
\&                                no <marc_target> exists.
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Koha Development Team
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright Koha Team
.SH "LICENSE"
.IX Header "LICENSE"
This file is part of Koha.
.PP
# Koha is free software; you can redistribute it and/or modify it
# under the terms of the \s-1GNU\s0 General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Koha is distributed in the hope that it will be useful, but
# \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
# \s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0 See the
# \s-1GNU\s0 General Public License for more details.
#
# You should have received a copy of the \s-1GNU\s0 General Public License
# along with Koha; if not, see <http://www.gnu.org/licenses>.
