.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Acquisition::Orders 3pm"
.TH Koha::Acquisition::Orders 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Acquisition::Orders object set class
.SH "API"
.IX Header "API"
.SS "Class methods"
.IX Subsection "Class methods"
\fIfilter_by_lates\fR
.IX Subsection "filter_by_lates"
.PP
my \f(CW$late_orders\fR = \f(CW$orders\fR\->filter_by_lates($params);
.PP
Filter an order set given different parameters.
.PP
This is the equivalent method of the former GetLateOrders C4 subroutine
.PP
\&\f(CW$params\fR can be:
.ie n .IP """delay"" the number of days the basket has been closed" 4
.el .IP "\f(CWdelay\fR the number of days the basket has been closed" 4
.IX Item "delay the number of days the basket has been closed"
.PD 0
.ie n .IP """bookseller_id"" the bookseller id" 4
.el .IP "\f(CWbookseller_id\fR the bookseller id" 4
.IX Item "bookseller_id the bookseller id"
.ie n .IP """estimated_from"" Beginning of the estimated delivery date" 4
.el .IP "\f(CWestimated_from\fR Beginning of the estimated delivery date" 4
.IX Item "estimated_from Beginning of the estimated delivery date"
.ie n .IP """estimated_to"" End of the estimated delivery date" 4
.el .IP "\f(CWestimated_to\fR End of the estimated delivery date" 4
.IX Item "estimated_to End of the estimated delivery date"
.PD
.PP
\fIfilter_by_active\fR
.IX Subsection "filter_by_active"
.PP
.Vb 1
\&    my $new_rs = $orders\->filter_by_active;
.Ve
.PP
Returns a new resultset filtering orders that are not active.
.PP
\fIfilter_by_current\fR
.IX Subsection "filter_by_current"
.PP
.Vb 1
\&    $orders\->filter_by_current
.Ve
.PP
Return the orders of the set that have not been cancelled.
.PP
\fIfilter_by_cancelled\fR
.IX Subsection "filter_by_cancelled"
.PP
.Vb 1
\&    $orders\->filter_by_cancelled
.Ve
.PP
Return the orders of the set that have been cancelled.
.PP
\fIfilter_by_id_including_transfers\fR
.IX Subsection "filter_by_id_including_transfers"
.PP
.Vb 5
\&    my $orders = $orders\->filter_by_id_including_transfers(
\&        {
\&            ordernumber => $ordernumber
\&        }
\&    );
.Ve
.PP
When searching for orders by \fIordernumber\fR, include the aqorders_transfers table
so we can find orders that have changed their ordernumber as the result of a transfer
.SS "Internal methods"
.IX Subsection "Internal methods"
\fI_type\fR
.IX Subsection "_type"
.PP
\fIobject_class\fR
.IX Subsection "object_class"
