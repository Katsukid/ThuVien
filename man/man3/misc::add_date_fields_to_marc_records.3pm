.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "misc::add_date_fields_to_marc_records 3pm"
.TH misc::add_date_fields_to_marc_records 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
add_date_fields_to_marc_records.pl
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  perl add_date_fields_to_marc_records.pl \-\-help
\&
\&  perl add_date_fields_to_marc_records.pl \-\-field=\*(Aq905$a=0/%Y\*(Aq \-\-field=\*(Aq905$a=1/%Y/%b\-%m\*(Aq \-\-field=\*(Aq905$a=2/%Y/%b\-%m/%d\*(Aq \-\-unless\-exists=\*(Aq905$a\*(Aq \-\-verbose \-\-confirm
\&
\&  perl add_date_fields_to_marc_records.pl \-\-field=\*(Aq905$a=0/%Y\*(Aq \-\-field=\*(Aq905$a=1/%Y/%b\-%m\*(Aq \-\-field=\*(Aq905$a=2/%Y/%b\-%m/%d\*(Aq \-\-unless\-exists=\*(Aq905$a\*(Aq \-\-where "biblionumber=42" \-\-verbose \-\-confirm
\&
\&  perl add_date_fields_to_marc_records.pl \-\-field=\*(Aq905$a=0/%Y\*(Aq \-\-field=\*(Aq905$a=1/%Y/%b\-%m\*(Aq \-\-field=\*(Aq905$a=2/%Y/%b\-%m/%d\*(Aq \-\-date\-field=\*(Aq908$a\*(Aq \-\-verbose \-\-confirm
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Add some \s-1MARC\s0 fields to bibliographic records.
.PP
The replacement tokens are the ones used by strftime.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-help\fR" 8
.IX Item "--help"
Prints this help
.IP "\fB\-\-verbose\fR" 8
.IX Item "--verbose"
Verbose mode.
.IP "\fB\-\-confirm\fR" 8
.IX Item "--confirm"
Confirmation flag, the script will be running in dry-run mode if set not.
.IP "\fB\-\-where\fR" 8
.IX Item "--where"
Limits the search on bibliographic records with a user-specified \s-1WHERE\s0 clause.
.Sp
Only the columns from the biblio table are available.
.IP "\fB\-\-field\fR" 8
.IX Item "--field"
Fields to add to the bibliographic records.
.Sp
Must be formatted as 'tag' $ 'subfield' = 'value'
.Sp
For instance:
.Sp
905$a=0/%Y will add a new field 905$a with the value '0/2019' (if run in 2019)
.Sp
905$a=2/%Y/%b\-%m/%d'will a a new field 905$a with the value '2/2019/Mar\-03/13' if run on March 13th 2019
.IP "\fB\-\-unless\-exists\fR" 8
.IX Item "--unless-exists"
Will only create the new fields if this field does not exist.
.Sp
For instance, if \-\-field='905$a=0/%Y' and \-\-unless\-exists='905$a' are provided, a 905$a will be created unless there is already one.
If \-\-unless\-exists is not passed, a new 905$a will be created in any case.
.IP "\fB\-\-date\-field\fR" 8
.IX Item "--date-field"
The date will be picked from a specific marc field.
.Sp
For instance, if the record contains a date formatted YYYY-MM-DD in 908$a, you can pass \-\-date\-field='908$a'
Note that the date format used will be the one defined in the syspref 'dateformat', or iso format.
