.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Schema::Result::Suggestion 3pm"
.TH Koha::Schema::Result::Suggestion 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Schema::Result::Suggestion
.ie n .SH "TABLE: ""suggestions"""
.el .SH "TABLE: \f(CWsuggestions\fP"
.IX Header "TABLE: suggestions"
.SH "ACCESSORS"
.IX Header "ACCESSORS"
.SS "suggestionid"
.IX Subsection "suggestionid"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_auto_increment: 1
\&  is_nullable: 0
.Ve
.PP
unique identifier assigned automatically by Koha
.SS "suggestedby"
.IX Subsection "suggestedby"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.PP
borrowernumber for the person making the suggestion, foreign key linking to the borrowers table
.SS "suggesteddate"
.IX Subsection "suggesteddate"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 0
.Ve
.PP
date the suggestion was submitted
.SS "managedby"
.IX Subsection "managedby"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.PP
borrowernumber for the librarian managing the suggestion, foreign key linking to the borrowers table
.SS "manageddate"
.IX Subsection "manageddate"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
date the suggestion was updated
.SS "acceptedby"
.IX Subsection "acceptedby"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.PP
borrowernumber for the librarian who accepted the suggestion, foreign key linking to the borrowers table
.SS "accepteddate"
.IX Subsection "accepteddate"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
date the suggestion was marked as accepted
.SS "rejectedby"
.IX Subsection "rejectedby"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.PP
borrowernumber for the librarian who rejected the suggestion, foreign key linking to the borrowers table
.SS "rejecteddate"
.IX Subsection "rejecteddate"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
date the suggestion was marked as rejected
.SS "lastmodificationby"
.IX Subsection "lastmodificationby"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.PP
borrowernumber for the librarian who edit the suggestion for the last time
.SS "lastmodificationdate"
.IX Subsection "lastmodificationdate"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
date of the last modification
.SS "\s-1STATUS\s0"
.IX Subsection "STATUS"
.Vb 5
\&  accessor: \*(Aqstatus\*(Aq
\&  data_type: \*(Aqvarchar\*(Aq
\&  default_value: (empty string)
\&  is_nullable: 0
\&  size: 10
.Ve
.PP
suggestion status (\s-1ASKED, CHECKED, ACCEPTED, REJECTED, ORDERED, AVAILABLE\s0 or a value from the \s-1SUGGEST_STATUS\s0 authorised value category)
.SS "archived"
.IX Subsection "archived"
.Vb 3
\&  data_type: \*(Aqtinyint\*(Aq
\&  default_value: 0
\&  is_nullable: 0
.Ve
.PP
is the suggestion archived?
.SS "note"
.IX Subsection "note"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
note entered on the suggestion
.SS "staff_note"
.IX Subsection "staff_note"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
non-public note entered on the suggestion
.SS "author"
.IX Subsection "author"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 80
.Ve
.PP
author of the suggested item
.SS "title"
.IX Subsection "title"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 255
.Ve
.PP
title of the suggested item
.SS "copyrightdate"
.IX Subsection "copyrightdate"
.Vb 2
\&  data_type: \*(Aqsmallint\*(Aq
\&  is_nullable: 1
.Ve
.PP
copyright date of the suggested item
.SS "publishercode"
.IX Subsection "publishercode"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 255
.Ve
.PP
publisher of the suggested item
.SS "date"
.IX Subsection "date"
.Vb 4
\&  data_type: \*(Aqtimestamp\*(Aq
\&  datetime_undef_if_invalid: 1
\&  default_value: current_timestamp
\&  is_nullable: 0
.Ve
.PP
date and time the suggestion was updated
.SS "volumedesc"
.IX Subsection "volumedesc"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 255
.Ve
.SS "publicationyear"
.IX Subsection "publicationyear"
.Vb 3
\&  data_type: \*(Aqsmallint\*(Aq
\&  default_value: 0
\&  is_nullable: 1
.Ve
.SS "place"
.IX Subsection "place"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 255
.Ve
.PP
publication place of the suggested item
.SS "isbn"
.IX Subsection "isbn"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 30
.Ve
.PP
isbn of the suggested item
.SS "biblionumber"
.IX Subsection "biblionumber"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.PP
foreign key linking the suggestion to the biblio table after the suggestion has been ordered
.SS "reason"
.IX Subsection "reason"
.Vb 2
\&  data_type: \*(Aqmediumtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
reason for accepting or rejecting the suggestion
.SS "patronreason"
.IX Subsection "patronreason"
.Vb 2
\&  data_type: \*(Aqmediumtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
reason for making the suggestion
.SS "budgetid"
.IX Subsection "budgetid"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.PP
foreign key linking the suggested budget to the aqbudgets table
.SS "branchcode"
.IX Subsection "branchcode"
.Vb 4
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
foreign key linking the suggested branch to the branches table
.SS "collectiontitle"
.IX Subsection "collectiontitle"
.Vb 2
\&  data_type: \*(Aqmediumtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
collection name for the suggested item
.SS "itemtype"
.IX Subsection "itemtype"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 30
.Ve
.PP
suggested item type
.SS "quantity"
.IX Subsection "quantity"
.Vb 2
\&  data_type: \*(Aqsmallint\*(Aq
\&  is_nullable: 1
.Ve
.PP
suggested quantity to be purchased
.SS "currency"
.IX Subsection "currency"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
suggested currency for the suggested price
.SS "price"
.IX Subsection "price"
.Vb 3
\&  data_type: \*(Aqdecimal\*(Aq
\&  is_nullable: 1
\&  size: [28,6]
.Ve
.PP
suggested price
.SS "total"
.IX Subsection "total"
.Vb 3
\&  data_type: \*(Aqdecimal\*(Aq
\&  is_nullable: 1
\&  size: [28,6]
.Ve
.PP
suggested total cost (price*quantity updated for currency)
.SH "PRIMARY KEY"
.IX Header "PRIMARY KEY"
.IP "\(bu" 4
\&\*(L"suggestionid\*(R"
.SH "RELATIONS"
.IX Header "RELATIONS"
.SS "acceptedby"
.IX Subsection "acceptedby"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Borrower
.SS "biblionumber"
.IX Subsection "biblionumber"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Biblio
.SS "branchcode"
.IX Subsection "branchcode"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Branch
.SS "budgetid"
.IX Subsection "budgetid"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Aqbudget
.SS "lastmodificationby"
.IX Subsection "lastmodificationby"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Borrower
.SS "managedby"
.IX Subsection "managedby"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Borrower
.SS "rejectedby"
.IX Subsection "rejectedby"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Borrower
.SS "suggestedby"
.IX Subsection "suggestedby"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Borrower
