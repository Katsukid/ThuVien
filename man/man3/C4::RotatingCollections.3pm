.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "C4::RotatingCollections 3pm"
.TH C4::RotatingCollections 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::RotatingCollections \- Functions for managing rotating collections
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.ie n .SS "CreateCollection ( $success, $errorcode, $errormessage ) = CreateCollection( $title, $description );"
.el .SS "CreateCollection ( \f(CW$success\fP, \f(CW$errorcode\fP, \f(CW$errormessage\fP ) = CreateCollection( \f(CW$title\fP, \f(CW$description\fP );"
.IX Subsection "CreateCollection ( $success, $errorcode, $errormessage ) = CreateCollection( $title, $description );"
Creates a new collection
.PP
.Vb 3
\& Input:
\&   $title: short description of the club or service
\&   $description: long description of the club or service
\&
\& Output:
\&   $success: 1 if all database operations were successful, 0 otherwise
\&   $errorCode: Code for reason of failure, good for translating errors in templates
\&   $errorMessage: English description of error
.Ve
.SS "UpdateCollection"
.IX Subsection "UpdateCollection"
.Vb 1
\& ( $success, $errorcode, $errormessage ) = UpdateCollection( $colId, $title, $description );
.Ve
.PP
Updates a collection
.PP
.Vb 4
\& Input:
\&   $colId: id of the collection to be updated
\&   $title: short description of the club or service
\&   $description: long description of the club or service
\&
\& Output:
\&   $success: 1 if all database operations were successful, 0 otherwise
\&   $errorCode: Code for reason of failure, good for translating errors in templates
\&   $errorMessage: English description of error
.Ve
.SS "DeleteCollection"
.IX Subsection "DeleteCollection"
.Vb 1
\& ( $success, $errorcode, $errormessage ) = DeleteCollection( $colId );
.Ve
.PP
Deletes a collection of the given id
.PP
.Vb 2
\& Input:
\&   $colId : id of the Archetype to be deleted
\&
\& Output:
\&   $success: 1 if all database operations were successful, 0 otherwise
\&   $errorCode: Code for reason of failure, good for translating errors in templates
\&   $errorMessage: English description of error
.Ve
.SS "GetCollections"
.IX Subsection "GetCollections"
.Vb 1
\& $collections = GetCollections();
.Ve
.PP
Returns data about all collections
.PP
.Vb 6
\& Output:
\&  On Success:
\&   $results: Reference to an array of associated arrays
\&  On Failure:
\&   $errorCode: Code for reason of failure, good for translating errors in templates
\&   $errorMessage: English description of error
.Ve
.SS "GetItemsInCollection"
.IX Subsection "GetItemsInCollection"
.Vb 1
\& ( $results, $success, $errorcode, $errormessage ) = GetItemsInCollection( $colId );
.Ve
.PP
Returns information about the items in the given collection
.PP
.Vb 2
\& Input:
\&   $colId: The id of the collection
\&
\& Output:
\&   $results: Reference to an array of associated arrays
\&   $success: 1 if all database operations were successful, 0 otherwise
\&   $errorCode: Code for reason of failure, good for translating errors in templates
\&   $errorMessage: English description of error
.Ve
.SS "GetCollection"
.IX Subsection "GetCollection"
.Vb 1
\& ( $colId, $colTitle, $colDesc, $colBranchcode ) = GetCollection( $colId );
.Ve
.PP
Returns information about a collection
.PP
.Vb 4
\& Input:
\&   $colId: Id of the collection
\& Output:
\&   $colId, $colTitle, $colDesc, $colBranchcode
.Ve
.SS "AddItemToCollection"
.IX Subsection "AddItemToCollection"
.Vb 1
\& ( $success, $errorcode, $errormessage ) = AddItemToCollection( $colId, $itemnumber );
.Ve
.PP
Adds an item to a rotating collection.
.PP
.Vb 7
\& Input:
\&   $colId: Collection to add the item to.
\&   $itemnumber: Item to be added to the collection
\& Output:
\&   $success: 1 if all database operations were successful, 0 otherwise
\&   $errorCode: Code for reason of failure, good for translating errors in templates
\&   $errorMessage: English description of error
.Ve
.SS "RemoveItemFromCollection"
.IX Subsection "RemoveItemFromCollection"
.Vb 1
\& ( $success, $errorcode, $errormessage ) = RemoveItemFromCollection( $colId, $itemnumber );
.Ve
.PP
Removes an item to a collection
.PP
.Vb 3
\& Input:
\&   $colId: Collection to add the item to.
\&   $itemnumber: Item to be removed from collection
\&
\& Output:
\&   $success: 1 if all database operations were successful, 0 otherwise
\&   $errorCode: Code for reason of failure, good for translating errors in templates
\&   $errorMessage: English description of error
.Ve
.SS "TransferCollection"
.IX Subsection "TransferCollection"
.Vb 1
\& ( $success, $messages ) = TransferCollection( $colId, $colBranchcode );
.Ve
.PP
Transfers a collection to another branch
.PP
.Vb 3
\& Input:
\&   $colId: id of the collection to be updated
\&   $colBranchcode: branch where collection is moving to
\&
\& Output:
\&   $success: 1 if all database operations were successful, 0 otherwise
\&   $messages: Arrayref of messages for user feedback
.Ve
.SS "GetCollectionItemBranches"
.IX Subsection "GetCollectionItemBranches"
.Vb 1
\&  my ( $holdingBranch, $collectionBranch ) = GetCollectionItemBranches( $itemnumber );
.Ve
.SS "isItemInThisCollection"
.IX Subsection "isItemInThisCollection"
.Vb 1
\&  $inCollection = isItemInThisCollection( $itemnumber, $colId );
.Ve
.SS "isItemInAnyCollection"
.IX Subsection "isItemInAnyCollection"
.Vb 1
\&  my $inCollection = isItemInAnyCollection( $itemnumber );
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Kyle Hall <kylemhall@gmail.com>
