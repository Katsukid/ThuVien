.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "misc::cronjobs::delete_items 3pm"
.TH misc::cronjobs::delete_items 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
delete_items.pl \- A batch item deletion tool, which generates a query against the items database and deletes the items matching the criteria specified in the command line arguments.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
delete_items.pl [\-\-help|\-\-manual]
.PP
delete_items.pl [\-\-verbose] \-\-where "\fI\s-1SQL CONDITIONAL EXPRESSION\s0\fR" ... [\-\-commit]
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-help\fR" 8
.IX Item "--help"
Show the brief help information.
.IP "\fB\-\-manual\fR" 8
.IX Item "--manual"
Read the manual, with examples.
.IP "\fB\-\-verbose\fR" 8
.IX Item "--verbose"
Send the \*(L"\s-1WHERE\*(R"\s0 clause generated by the collected \f(CW\*(C`\-\-where\*(C'\fR
arguments, as well as items affected to Standard Out.
.IP "\fB\-\-where\fR" 8
.IX Item "--where"
The \f(CW\*(C`\-\-where\*(C'\fR option may called multiple times. The following argument
must be a syntactically valid \s-1SQL\s0 statement which is part of the \f(CW\*(C`WHERE\*(C'\fR
clause querying the items table. These are joined by \f(CW\*(C`AND\*(C'\fR.
.IP "\fB\-\-commit\fR" 8
.IX Item "--commit"
No items will be deleted unless the \f(CW\*(C`\-\-commit\*(C'\fR flag is present.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 1
\&  The following is an example of this script:
\&
\& delete_items.pl \-\-where "items.withdrawn ! 0"  \-\-where "items.withdrawn_on < $(date \-\-date="13 month ago" \-\-rfc\-3339=date)" \-\-commit
\&
\& delete_items.pl \-\-where "itemlost >= \*(Aq1\*(Aq" \-\-where "itemlost <=\*(Aq4\*(Aq" \-\-where "itemlost_on < \*(Aq2014\-04\-28\*(Aq" \-\-commit
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 1
\& This is a lightweight batch deletion tool for items, suitable for running in a cron job.
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 1
\& Barton Chittenden <barton@bywatersolutions.com>
.Ve
