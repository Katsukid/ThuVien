.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Util::StockRotation 3pm"
.TH Koha::Util::StockRotation 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Util::StockRotation \- utility class with routines for Stock Rotation
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "get_branches"
.IX Subsection "get_branches"
.Vb 2
\&    returns all branches ordered by branchname as an array, each element
\&    contains a hashref containing branch details
.Ve
.SS "get_stages"
.IX Subsection "get_stages"
.Vb 2
\&    returns an arrayref of StockRotationStage objects representing
\&    all stages for a passed rota
.Ve
.SS "toggle_indemand"
.IX Subsection "toggle_indemand"
.Vb 2
\&    given an item\*(Aqs ID & stage ID toggle that item\*(Aqs in_demand
\&    status on that stage
.Ve
.SS "move_to_next_stage"
.IX Subsection "move_to_next_stage"
.Vb 2
\&    given an item\*(Aqs ID and stage ID, move it
\&    to the next stage on the rota
.Ve
.SS "remove_from_stage"
.IX Subsection "remove_from_stage"
.Vb 1
\&    given an item\*(Aqs ID & stage ID, remove that item from that stage
.Ve
.SS "get_barcodes_status"
.IX Subsection "get_barcodes_status"
.Vb 1
\&    take an arrayref of barcodes and a status hashref and populate it
.Ve
.SS "add_items_to_rota"
.IX Subsection "add_items_to_rota"
.Vb 1
\&    take an arrayref of Koha::Item objects and add them to the passed rota
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Andrew Isherwood <andrew.isherwood@ptfs\-europe.com>
