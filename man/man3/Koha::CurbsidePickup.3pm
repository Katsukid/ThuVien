.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::CurbsidePickup 3pm"
.TH Koha::CurbsidePickup 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::CurbsidePickup \- Koha Curbside Pickup Object class
.SH "API"
.IX Header "API"
.SS "Class methods"
.IX Subsection "Class methods"
\fInew\fR
.IX Subsection "new"
.PP
\fInotify_new_pickup\fR
.IX Subsection "notify_new_pickup"
.PP
\&\f(CW$pickup\fR\->notify_new_pickup
.PP
Will notify the patron that the pickup has been created.
Letter '\s-1NEW_CURBSIDE_PICKUP\s0 will be used', and depending on 'Hold_Filled' configuration.
.PP
\fIcheckouts\fR
.IX Subsection "checkouts"
.PP
Return the checkouts linked to this pickup
.PP
\fIpatron\fR
.IX Subsection "patron"
.PP
Return the patron linked to this pickup
.PP
\fIstaged_by_staff\fR
.IX Subsection "staged_by_staff"
.PP
Return the staff member that staged this pickup
.PP
\fIlibrary\fR
.IX Subsection "library"
.PP
Return the branch associated with this pickup
.PP
\fImark_as_staged\fR
.IX Subsection "mark_as_staged"
.PP
Mark the pickup as staged
.PP
\fImark_as_unstaged\fR
.IX Subsection "mark_as_unstaged"
.PP
Mark the pickup as unstaged
.PP
\fImark_patron_has_arrived\fR
.IX Subsection "mark_patron_has_arrived"
.PP
Set the arrival time of the patron
.PP
\fImark_as_delivered\fR
.IX Subsection "mark_as_delivered"
.PP
Mark the pickup as delivered. The waiting holds will be filled.
.PP
\fIstatus\fR
.IX Subsection "status"
.PP
Return the status of the pickup, can be 'to\-be\-staged', 'staged\-and\-ready', 'patron\-is\-outside' or 'delivered'.
.SS "Internal methods"
.IX Subsection "Internal methods"
\fI_type\fR
.IX Subsection "_type"
