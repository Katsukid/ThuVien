.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Schema::Result::Aqbookseller 3pm"
.TH Koha::Schema::Result::Aqbookseller 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Schema::Result::Aqbookseller
.ie n .SH "TABLE: ""aqbooksellers"""
.el .SH "TABLE: \f(CWaqbooksellers\fP"
.IX Header "TABLE: aqbooksellers"
.SH "ACCESSORS"
.IX Header "ACCESSORS"
.SS "id"
.IX Subsection "id"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_auto_increment: 1
\&  is_nullable: 0
.Ve
.PP
primary key and unique identifier assigned by Koha
.SS "name"
.IX Subsection "name"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 0
.Ve
.PP
vendor name
.SS "address1"
.IX Subsection "address1"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
first line of vendor physical address
.SS "address2"
.IX Subsection "address2"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
second line of vendor physical address
.SS "address3"
.IX Subsection "address3"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
third line of vendor physical address
.SS "address4"
.IX Subsection "address4"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
fourth line of vendor physical address
.SS "phone"
.IX Subsection "phone"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 30
.Ve
.PP
vendor phone number
.SS "accountnumber"
.IX Subsection "accountnumber"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
vendor account number
.SS "type"
.IX Subsection "type"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 255
.Ve
.SS "notes"
.IX Subsection "notes"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
order notes
.SS "postal"
.IX Subsection "postal"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
vendor postal address (all lines)
.SS "url"
.IX Subsection "url"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 255
.Ve
.PP
vendor web address
.SS "active"
.IX Subsection "active"
.Vb 2
\&  data_type: \*(Aqtinyint\*(Aq
\&  is_nullable: 1
.Ve
.PP
is this vendor active (1 for yes, 0 for no)
.SS "listprice"
.IX Subsection "listprice"
.Vb 4
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
currency code for list prices
.SS "invoiceprice"
.IX Subsection "invoiceprice"
.Vb 4
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
currency code for invoice prices
.SS "gstreg"
.IX Subsection "gstreg"
.Vb 2
\&  data_type: \*(Aqtinyint\*(Aq
\&  is_nullable: 1
.Ve
.PP
is your library charged tax (1 for yes, 0 for no)
.SS "listincgst"
.IX Subsection "listincgst"
.Vb 2
\&  data_type: \*(Aqtinyint\*(Aq
\&  is_nullable: 1
.Ve
.PP
is tax included in list prices (1 for yes, 0 for no)
.SS "invoiceincgst"
.IX Subsection "invoiceincgst"
.Vb 2
\&  data_type: \*(Aqtinyint\*(Aq
\&  is_nullable: 1
.Ve
.PP
is tax included in invoice prices (1 for yes, 0 for no)
.SS "tax_rate"
.IX Subsection "tax_rate"
.Vb 3
\&  data_type: \*(Aqdecimal\*(Aq
\&  is_nullable: 1
\&  size: [6,4]
.Ve
.PP
the tax rate the library is charged
.SS "discount"
.IX Subsection "discount"
.Vb 3
\&  data_type: \*(Aqfloat\*(Aq
\&  is_nullable: 1
\&  size: [6,4]
.Ve
.PP
discount offered on all items ordered from this vendor
.SS "fax"
.IX Subsection "fax"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 50
.Ve
.PP
vendor fax number
.SS "deliverytime"
.IX Subsection "deliverytime"
.Vb 2
\&  data_type: \*(Aqinteger\*(Aq
\&  is_nullable: 1
.Ve
.PP
vendor delivery time
.SS "external_id"
.IX Subsection "external_id"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 255
.Ve
.PP
external id of the vendor
.SH "PRIMARY KEY"
.IX Header "PRIMARY KEY"
.IP "\(bu" 4
\&\*(L"id\*(R"
.SH "RELATIONS"
.IX Header "RELATIONS"
.SS "aqbasketgroups"
.IX Subsection "aqbasketgroups"
Type: has_many
.PP
Related object: Koha::Schema::Result::Aqbasketgroup
.SS "aqbaskets"
.IX Subsection "aqbaskets"
Type: has_many
.PP
Related object: Koha::Schema::Result::Aqbasket
.SS "aqbookseller_aliases"
.IX Subsection "aqbookseller_aliases"
Type: has_many
.PP
Related object: Koha::Schema::Result::AqbooksellerAlias
.SS "aqbookseller_interfaces"
.IX Subsection "aqbookseller_interfaces"
Type: has_many
.PP
Related object: Koha::Schema::Result::AqbooksellerInterface
.SS "aqcontacts"
.IX Subsection "aqcontacts"
Type: has_many
.PP
Related object: Koha::Schema::Result::Aqcontact
.SS "aqcontracts"
.IX Subsection "aqcontracts"
Type: has_many
.PP
Related object: Koha::Schema::Result::Aqcontract
.SS "aqinvoices"
.IX Subsection "aqinvoices"
Type: has_many
.PP
Related object: Koha::Schema::Result::Aqinvoice
.SS "edifact_messages"
.IX Subsection "edifact_messages"
Type: has_many
.PP
Related object: Koha::Schema::Result::EdifactMessage
.SS "erm_agreements"
.IX Subsection "erm_agreements"
Type: has_many
.PP
Related object: Koha::Schema::Result::ErmAgreement
.SS "erm_eholdings_packages"
.IX Subsection "erm_eholdings_packages"
Type: has_many
.PP
Related object: Koha::Schema::Result::ErmEholdingsPackage
.SS "erm_eholdings_resources"
.IX Subsection "erm_eholdings_resources"
Type: has_many
.PP
Related object: Koha::Schema::Result::ErmEholdingsResource
.SS "erm_licenses"
.IX Subsection "erm_licenses"
Type: has_many
.PP
Related object: Koha::Schema::Result::ErmLicense
.SS "invoiceprice"
.IX Subsection "invoiceprice"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Currency
.SS "listprice"
.IX Subsection "listprice"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Currency
.SS "vendor_edi_accounts"
.IX Subsection "vendor_edi_accounts"
Type: has_many
.PP
Related object: Koha::Schema::Result::VendorEdiAccount
