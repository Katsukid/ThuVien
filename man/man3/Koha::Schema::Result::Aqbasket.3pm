.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Schema::Result::Aqbasket 3pm"
.TH Koha::Schema::Result::Aqbasket 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Schema::Result::Aqbasket
.ie n .SH "TABLE: ""aqbasket"""
.el .SH "TABLE: \f(CWaqbasket\fP"
.IX Header "TABLE: aqbasket"
.SH "ACCESSORS"
.IX Header "ACCESSORS"
.SS "basketno"
.IX Subsection "basketno"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_auto_increment: 1
\&  is_nullable: 0
.Ve
.PP
primary key, Koha defined number
.SS "basketname"
.IX Subsection "basketname"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 50
.Ve
.PP
name given to the basket at creation
.SS "note"
.IX Subsection "note"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
the internal note added at basket creation
.SS "booksellernote"
.IX Subsection "booksellernote"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
the vendor note added at basket creation
.SS "contractnumber"
.IX Subsection "contractnumber"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.PP
links this basket to the aqcontract table (aqcontract.contractnumber)
.SS "creationdate"
.IX Subsection "creationdate"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
the date the basket was created
.SS "closedate"
.IX Subsection "closedate"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
the date the basket was closed
.SS "booksellerid"
.IX Subsection "booksellerid"
.Vb 4
\&  data_type: \*(Aqinteger\*(Aq
\&  default_value: 1
\&  is_foreign_key: 1
\&  is_nullable: 0
.Ve
.PP
the Koha assigned \s-1ID\s0 for the vendor (aqbooksellers.id)
.SS "authorisedby"
.IX Subsection "authorisedby"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
the borrowernumber of the person who created the basket
.SS "booksellerinvoicenumber"
.IX Subsection "booksellerinvoicenumber"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
appears to always be \s-1NULL\s0
.SS "basketgroupid"
.IX Subsection "basketgroupid"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.PP
links this basket to its group (aqbasketgroups.id)
.SS "deliveryplace"
.IX Subsection "deliveryplace"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
basket delivery place
.SS "billingplace"
.IX Subsection "billingplace"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
basket billing place
.SS "branch"
.IX Subsection "branch"
.Vb 4
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
basket branch
.SS "is_standing"
.IX Subsection "is_standing"
.Vb 3
\&  data_type: \*(Aqtinyint\*(Aq
\&  default_value: 0
\&  is_nullable: 0
.Ve
.PP
orders in this basket are standing
.SS "create_items"
.IX Subsection "create_items"
.Vb 3
\&  data_type: \*(Aqenum\*(Aq
\&  extra: {list => ["ordering","receiving","cataloguing"]}
\&  is_nullable: 1
.Ve
.PP
when items should be created for orders in this basket
.SH "PRIMARY KEY"
.IX Header "PRIMARY KEY"
.IP "\(bu" 4
\&\*(L"basketno\*(R"
.SH "RELATIONS"
.IX Header "RELATIONS"
.SS "aqbasketusers"
.IX Subsection "aqbasketusers"
Type: has_many
.PP
Related object: Koha::Schema::Result::Aqbasketuser
.SS "aqorders"
.IX Subsection "aqorders"
Type: has_many
.PP
Related object: Koha::Schema::Result::Aqorder
.SS "basketgroupid"
.IX Subsection "basketgroupid"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Aqbasketgroup
.SS "booksellerid"
.IX Subsection "booksellerid"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Aqbookseller
.SS "branch"
.IX Subsection "branch"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Branch
.SS "contractnumber"
.IX Subsection "contractnumber"
Type: belongs_to
.PP
Related object: Koha::Schema::Result::Aqcontract
.SS "edifact_messages"
.IX Subsection "edifact_messages"
Type: has_many
.PP
Related object: Koha::Schema::Result::EdifactMessage
.SS "borrowernumbers"
.IX Subsection "borrowernumbers"
Type: many_to_many
.PP
Composing rels: \*(L"aqbasketusers\*(R" \-> borrowernumber
