.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "C4::Installer::PerlModules 3pm"
.TH C4::Installer::PerlModules 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::Installer::PerlModules
.SH "ABSTRACT"
.IX Header "ABSTRACT"
A module for manipulating Koha Perl dependency list objects.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fBnew()\fP"
.IX Subsection "new()"
.Vb 1
\&    Creates a new PerlModules object 
\&
\&    example:
\&        C<my $perl_modules = C4::Installer::PerlModules\->new;>
.Ve
.SS "\fBprereq_pm()\fP"
.IX Subsection "prereq_pm()"
.Vb 1
\&    Returns a hashref of a hash of module information suitable for use in Makefile.PL
\&
\&    example:
\&        C<my $perl_modules = C4::Installer::PerlModules\->new;
\&
\&        ...
\&
\&        PREREQ_PM    => $perl_modules\->prereq_pm,>
.Ve
.SS "versions_info"
.IX Subsection "versions_info"
.Vb 1
\&        C<$perl_modules\->versions_info;>
\&
\&        This loads info of required modules into three accessors: missing_pm,
\&        upgrade_pm, and current_pm. Each of these may be accessed by using the
\&        C<get_attr> method. Each accessor returns an anonymous array who\*(Aqs
\&        elements are anonymous hashes. They follow this format (NOTE: Upgrade
\&        status is indicated by the accessor name.):
\&
\&        [
\&                  {
\&                    \*(AqText::CSV::Encoded\*(Aq => {
\&                                              \*(Aqrequired\*(Aq => 1,
\&                                              \*(Aqcur_ver\*(Aq => 0.09,
\&                                              \*(Aqmin_ver\*(Aq => \*(Aq0.09\*(Aq
\&                                            }
\&                  },
\&                  {
\&                    \*(AqBiblio::EndnoteStyle\*(Aq => {
\&                                                \*(Aqrequired\*(Aq => 1,
\&                                                \*(Aqcur_ver\*(Aq => 0,
\&                                                \*(Aqmin_ver\*(Aq => \*(Aq0.05\*(Aq
\&                                              }
\&                  },
\&        }
.Ve
.SS "get_attr(attr_name)"
.IX Subsection "get_attr(attr_name)"
.Vb 1
\&    Returns an anonymous array containing the contents of the passed in accessor. Valid accessors are:
\&
\&    missing_pm \- Perl modules used by Koha but not currently installed.
\&
\&    upgrade_pm \- Perl modules currently installed but below the minimum version required by Koha.
\&
\&    current_pm \- Perl modules currently installed and up to date as required by Koha.
\&
\&    example:
\&        C<my $missing_pm = $perl_modules\->get_attr(\*(Aqmissing_pm\*(Aq);>
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Nighswonger <cnighswonger \s-1AT\s0 foundations \s-1DOT\s0 edu>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010 Foundations Bible College.
.SH "LICENSE"
.IX Header "LICENSE"
This file is part of Koha.
.PP
Koha is free software; you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.
.PP
Koha is distributed in the hope that it will be useful, but
\&\s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0 See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with Koha; if not, see <http://www.gnu.org/licenses>.
.SH "DISCLAIMER OF WARRANTY"
.IX Header "DISCLAIMER OF WARRANTY"
Koha is distributed in the hope that it will be useful, but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR
A PARTICULAR PURPOSE.\s0  See the \s-1GNU\s0 General Public License for more details.
