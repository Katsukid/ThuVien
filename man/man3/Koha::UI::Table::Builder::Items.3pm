.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::UI::Table::Builder::Items 3pm"
.TH Koha::UI::Table::Builder::Items 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::UI::Table::Builder::Items
.PP
Helper to build a table with a list of items with all their information.
.PP
Items' attributes that are mapped and not mapped will be listed in the table.
.PP
Only attributes that have been defined only once will be displayed (empty string is considered as not defined).
.SH "API"
.IX Header "API"
.SS "Class methods"
.IX Subsection "Class methods"
\fInew\fR
.IX Subsection "new"
.PP
.Vb 1
\&    my $table = Koha::UI::Table::Builder::Items\->new( { itemnumbers => \e@itemnumbers } );
.Ve
.PP
Constructor.
.PP
\fIbuild_table\fR
.IX Subsection "build_table"
.PP
.Vb 2
\&    my $items_table = Koha::UI::Table::Builder::Items\->new( { itemnumbers => \e@itemnumbers } )
\&                                                     \->build_table;
\&
\&    my $items   = $items_table\->{items};
\&    my $headers = $items_table\->{headers};
.Ve
.PP
Build the headers and rows for the table.
.PP
Use it with:
    [% \s-1PROCESS\s0 items_table_batchmod headers => headers, items => items %]
.SS "Internal methods"
.IX Subsection "Internal methods"
\fI_build_headers\fR
.IX Subsection "_build_headers"
.PP
Build the headers given the items' info.
