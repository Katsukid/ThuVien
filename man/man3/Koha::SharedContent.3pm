.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::SharedContent 3pm"
.TH Koha::SharedContent 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::SharedContent \- Set of methods for querying Mana KB server
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Package for accessing shared content via Mana \s-1KB.\s0 Methods here are intended
to build and process queries for requesting from Mana \s-1KB\s0 server.
.SS "process_request"
.IX Subsection "process_request"
Koha::SharedContent::process_request($request);
.PP
Send a request to Mana \s-1KB\s0 server. \s-1URL\s0 is defined in koha\-conf.xml in mana_config
tag. \f(CW$request\fR parameter must be a HTTP::Request object. See build_request method.
.SS "increment_entity_value"
.IX Subsection "increment_entity_value"
Koha::SharedContent::increment_entity_value($entity_type, \f(CW$mana_entity_id\fR, \f(CW$field\fR);
.PP
Increment by 1 the field \f(CW$field\fR of a Mana entity. I.e, this is used to count the number
of Koha instances using a specific entity.
.SS "send_entity"
.IX Subsection "send_entity"
my \f(CW$result\fR = Koha::SharedContent::send_entity($language, \f(CW$borrowernumber\fR, \f(CW$mana_entity_id\fR, \f(CW$entity_type\fR);
.PP
Share a Koha entity (i.e subscription or report) to Mana \s-1KB.\s0
.PP
\fIcomment_entity\fR
.IX Subsection "comment_entity"
.PP
my \f(CW$result\fR = Koha::SharedContent::comment_entity($resource_id, \f(CW$resource_type\fR, \f(CW$comment\fR);
.PP
Send a comment about a Mana entity.
.SS "prepare_entity_data"
.IX Subsection "prepare_entity_data"
\&\f(CW$data\fR = prepare_entity_data($language, \f(CW$borrowernumber\fR, \f(CW$mana_entity_id\fR, \f(CW$entity_type\fR);
.PP
Prepare Koha entity data to be sent to Mana \s-1KB.\s0
.SS "get_entity_by_id"
.IX Subsection "get_entity_by_id"
my \f(CW$entity\fR = Koha::SharedContent::get_entity_by_id($entity_type, \f(CW$mana_entity_id\fR, [{usecomments => 1}]);
.PP
Retrieve a Mana entity to be imported into Koha. Add {usecomments => 1} to tell Mana to
embed all user reviews.
.SS "search_entities"
.IX Subsection "search_entities"
my \f(CW$result\fR = Koha::SharedContent::search_entities( \f(CW$entity_type\fR, \f(CW$search_params\fR );
my \f(CW$entities\fR = \f(CW$result\fR\->{data};
.PP
Search entities on ManaKB.
.SS "build_request"
.IX Subsection "build_request"
\&\f(CW$request\fR = build_request($mana_method, [$param1, \f(CW$param2\fR, ...]);
.PP
Create a HTTP::Request object to be passed to process_request.
.SS "get_sharing_url"
.IX Subsection "get_sharing_url"
my \f(CW$mana_url\fR = \fBget_sharing_url()\fR;
.PP
Get the Mana \s-1KB\s0 server \s-1URL\s0 set in koha config file.
