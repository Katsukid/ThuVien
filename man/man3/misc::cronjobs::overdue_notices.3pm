.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "misc::cronjobs::overdue_notices 3pm"
.TH misc::cronjobs::overdue_notices 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
overdue_notices.pl \- prepare messages to be sent to patrons for overdue items
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
overdue_notices.pl
  [ \-n ][ \-\-library <branchcode> ][ \-\-library <branchcode> ... ]
  [ \-\-max <number of days> ][ \-\-csv [<filename>] ][ \-\-itemscontent <field list> ]
  [ \-\-email <email_type> ... ]
.PP
.Vb 10
\& Options:
\&   \-\-help                          Brief help message.
\&   \-\-man                           Full documentation.
\&   \-\-verbose | \-v                  Verbose mode. Can be repeated for increased output
\&   \-\-nomail | \-n                   No email will be sent.
\&   \-\-max          <days>           Maximum days overdue to deal with.
\&   \-\-library      <branchcode>     Only deal with overdues from this library.
\&                                   (repeatable : several libraries can be given)
\&   \-\-csv          <filename>       Populate CSV file.
\&   \-\-html         <directory>      Output html to a file in the given directory.
\&   \-\-text         <directory>      Output plain text to a file in the given directory.
\&   \-\-itemscontent <list of fields> Item information in templates.
\&   \-\-borcat       <categorycode>   Category code that must be included.
\&   \-\-borcatout    <categorycode>   Category code that must be excluded.
\&   \-\-triggered | \-t                Only include triggered overdues.
\&   \-\-test                          Run in test mode. No changes will be made on the DB.
\&   \-\-list\-all                      List all overdues.
\&   \-\-date         <yyyy\-mm\-dd>     Emulate overdues run for this date.
\&   \-\-email        <email_type>     Type of email that will be used.
\&                                   Can be \*(Aqemail\*(Aq, \*(Aqemailpro\*(Aq or \*(AqB_email\*(Aq. Repeatable.
\&   \-\-frombranch                    Organize and send overdue notices by home library (item\-homebranch) or checkout library (item\-issuebranch).
\&                                   This option is only used, if the OverdueNoticeFrom system preference is set to \*(Aqcommand\-line option\*(Aq.
\&                                   Defaults to item\-issuebranch.
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-help\fR" 8
.IX Item "--help"
Print a brief help message and exits.
.IP "\fB\-\-man\fR" 8
.IX Item "--man"
Prints the manual page and exits.
.IP "\fB\-v\fR | \fB\-\-verbose\fR" 8
.IX Item "-v | --verbose"
Verbose. Without this flag set, only fatal errors are reported.
A single 'v' will report info on branches, letter codes, and patrons.
A second 'v' will report The \s-1SQL\s0 code used to search for triggered patrons.
.IP "\fB\-n\fR | \fB\-\-nomail\fR" 8
.IX Item "-n | --nomail"
Do not send any email. Overdue notices that would have been sent to
the patrons or to the admin are printed to standard out. \s-1CSV\s0 data (if
the \-\-csv flag is set) is written to standard out or to any csv
filename given.
.IP "\fB\-\-max\fR" 8
.IX Item "--max"
Items older than max days are assumed to be handled somewhere else,
probably the \fIlongoverdues.pl\fR script. They are therefore ignored by
this program. No notices are sent for them, and they are not added to
any \s-1CSV\s0 files. Defaults to 90 to match \fIlongoverdues.pl\fR.
.IP "\fB\-\-library\fR" 8
.IX Item "--library"
select overdues for one specific library. Use the value in the
branches.branchcode table. This option can be repeated in order 
to select overdues for a group of libraries.
.IP "\fB\-\-csv\fR" 8
.IX Item "--csv"
Produces \s-1CSV\s0 data. if \-n (no mail) flag is set, then this \s-1CSV\s0 data is
sent to standard out or to a filename if provided. Otherwise, only
overdues that could not be emailed are sent in \s-1CSV\s0 format to the admin.
.IP "\fB\-\-html\fR" 8
.IX Item "--html"
Produces html data. If patron does not have an email address or
\&\-n (no mail) flag is set, an \s-1HTML\s0 file is generated in the specified
directory. This can be downloaded or further processed by library staff.
The file will be called notices\-YYYY\-MM\-DD.html and placed in the directory
specified.
.IP "\fB\-\-text\fR" 8
.IX Item "--text"
Produces plain text data. If patron does not have an email address or
\&\-n (no mail) flag is set, a text file is generated in the specified
directory. This can be downloaded or further processed by library staff.
The file will be called notices\-YYYY\-MM\-DD.txt and placed in the directory
specified.
.IP "\fB\-\-itemscontent\fR" 8
.IX Item "--itemscontent"
comma separated list of fields that get substituted into templates in
places of the <<items.content>> placeholder. This
defaults to due date,title,barcode,author
.Sp
Other possible values come from fields in the biblios, items and
issues tables.
.IP "\fB\-\-borcat\fR" 8
.IX Item "--borcat"
Repeatable field, that permits to select only some patron categories.
.IP "\fB\-\-borcatout\fR" 8
.IX Item "--borcatout"
Repeatable field, that permits to exclude some patron categories.
.IP "\fB\-t\fR | \fB\-\-triggered\fR" 8
.IX Item "-t | --triggered"
This option causes a notice to be generated if and only if 
an item is overdue by the number of days defined in a notice trigger.
.Sp
By default, a notice is sent each time the script runs, which is suitable for 
less frequent run cron script, but requires syncing notice triggers with 
the  cron schedule to ensure proper behavior.
Add the \-\-triggered option for daily cron, at the risk of no notice 
being generated if the cron fails to run on time.
.IP "\fB\-\-test\fR" 8
.IX Item "--test"
This option makes the script run in test mode.
.Sp
In test mode, the script won't make any changes on the \s-1DB.\s0 This is useful
for debugging configuration.
.IP "\fB\-\-list\-all\fR" 8
.IX Item "--list-all"
Default items.content lists only those items that fall in the 
range of the currently processing notice.
Choose \-\-list\-all to include all overdue items in the list (limited by \fB\-\-max\fR setting).
.IP "\fB\-\-date\fR" 8
.IX Item "--date"
use it in order to send overdues on a specific date and not Now. Format: YYYY-MM-DD.
.IP "\fB\-\-email\fR" 8
.IX Item "--email"
Allows to specify which type of email will be used. Can be email, emailpro or B_email. Repeatable.
.IP "\fB\-\-frombranch\fR" 8
.IX Item "--frombranch"
Organize overdue notices either by checkout library (item-issuebranch) or item home library (item-homebranch).
This option is only used, if the OverdueNoticeFrom system preference is set to use 'command\-line option'.
Defaults to checkout library (item-issuebranch).
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script is designed to alert patrons and administrators of overdue
items.
.SS "Configuration"
.IX Subsection "Configuration"
This script pays attention to the overdue notice configuration
performed in the \*(L"Overdue notice/status triggers\*(R" section of the
\&\*(L"Tools\*(R" area of the staff interface to Koha. There, you can choose
which letter templates are sent out after a configurable number of
days to patrons of each library. More information about the use of this
section of Koha is available in the Koha manual.
.PP
The templates used to craft the emails are defined in the \*(L"Tools:
Notices\*(R" section of the staff interface to Koha.
.SS "Outgoing emails"
.IX Subsection "Outgoing emails"
Typically, messages are prepared for each patron with overdue
items. Messages for whom there is no email address on file are
collected and sent as attachments in a single email to each library
administrator, or if that is not set, then to the email address in the
\&\f(CW\*(C`KohaAdminEmailAddress\*(C'\fR system preference.
.PP
These emails are staged in the outgoing message queue, as are messages
produced by other features of Koha. This message queue must be
processed regularly by the
\&\fImisc/cronjobs/process_message_queue.pl\fR program.
.PP
In the event that the \f(CW\*(C`\-n\*(C'\fR flag is passed to this program, no emails
are sent. Instead, messages are sent on standard output from this
program. They may be redirected to a file if desired.
.SS "Templates"
.IX Subsection "Templates"
Templates can contain variables enclosed in double angle brackets like
<<this>>. Those variables will be replaced with values
specific to the overdue items or relevant patron. Available variables
are:
.IP "<<bib>>" 4
.IX Item "<<bib>>"
the name of the library
.IP "<<items.content>>" 4
.IX Item "<<items.content>>"
one line for each item, each line containing a tab separated list of
title, author, barcode, issuedate
.IP "<<borrowers.*>>" 4
.IX Item "<<borrowers.*>>"
any field from the borrowers table
.IP "<<branches.*>>" 4
.IX Item "<<branches.*>>"
any field from the branches table
.SS "\s-1CSV\s0 output"
.IX Subsection "CSV output"
The \f(CW\*(C`\-csv\*(C'\fR command line option lets you specify a file to which
overdues data should be output in \s-1CSV\s0 format.
.PP
With the \f(CW\*(C`\-n\*(C'\fR flag set, data about all overdues is written to the
file. Without that flag, only information about overdues that were
unable to be sent directly to the patrons will be written. In other
words, this \s-1CSV\s0 file replaces the data that is typically sent to the
administrator email address.
.SH "USAGE EXAMPLES"
.IX Header "USAGE EXAMPLES"
\&\f(CW\*(C`overdue_notices.pl\*(C'\fR \- In this most basic usage, with no command line
arguments, all libraries are processed individually, and notices are
prepared for all patrons with overdue items for whom we have email
addresses. Messages for those patrons for whom we have no email
address are sent in a single attachment to the library administrator's
email address, or to the address in the KohaAdminEmailAddress system
preference.
.PP
\&\f(CW\*(C`overdue_notices.pl \-n \-\-csv /tmp/overdues.csv\*(C'\fR \- sends no email and
populates \fI/tmp/overdues.csv\fR with information about all overdue
items.
.PP
\&\f(CW\*(C`overdue_notices.pl \-\-library MAIN max 14\*(C'\fR \- prepare notices of
overdues in the last 2 weeks for the \s-1MAIN\s0 library.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fImisc/cronjobs/advance_notices.pl\fR program allows you to send
messages to patrons in advance of their items becoming due, or to
alert them of items that have just become due.
.SH "INTERNAL METHODS"
.IX Header "INTERNAL METHODS"
These methods are internal to the operation of overdue_notices.pl.
.SS "prepare_letter_for_printing"
.IX Subsection "prepare_letter_for_printing"
returns a string of text appropriate for printing in the event that an
overdue notice will not be sent to the patron's email
address. Depending on the desired output format, this may be a \s-1CSV\s0
string, or a human-readable representation of the notice.
.PP
required parameters:
  letter
  borrowernumber
.PP
optional parameters:
  outputformat
.SS "_get_html_start"
.IX Subsection "_get_html_start"
Return the start of a \s-1HTML\s0 document, including html, head and the start body
tags. This should be usable both in the \s-1HTML\s0 file written to disc, and in the
attachment.html sent as email.
.SS "_get_html_end"
.IX Subsection "_get_html_end"
Return the end of an \s-1HTML\s0 document, namely the closing body and html tags.
