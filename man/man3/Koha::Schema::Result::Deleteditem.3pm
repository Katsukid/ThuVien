.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Schema::Result::Deleteditem 3pm"
.TH Koha::Schema::Result::Deleteditem 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Schema::Result::Deleteditem
.ie n .SH "TABLE: ""deleteditems"""
.el .SH "TABLE: \f(CWdeleteditems\fP"
.IX Header "TABLE: deleteditems"
.SH "ACCESSORS"
.IX Header "ACCESSORS"
.SS "itemnumber"
.IX Subsection "itemnumber"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  default_value: 0
\&  is_nullable: 0
.Ve
.PP
primary key and unique identifier added by Koha
.SS "biblionumber"
.IX Subsection "biblionumber"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  default_value: 0
\&  is_nullable: 0
.Ve
.PP
foreign key from biblio table used to link this item to the right bib record
.SS "biblioitemnumber"
.IX Subsection "biblioitemnumber"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  default_value: 0
\&  is_nullable: 0
.Ve
.PP
foreign key from the biblioitems table to link to item to additional information
.SS "barcode"
.IX Subsection "barcode"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 20
.Ve
.PP
item barcode (\s-1MARC21\s0 952$p)
.SS "dateaccessioned"
.IX Subsection "dateaccessioned"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
date the item was acquired or added to Koha (\s-1MARC21\s0 952$d)
.SS "booksellerid"
.IX Subsection "booksellerid"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
where the item was purchased (\s-1MARC21\s0 952$e)
.SS "homebranch"
.IX Subsection "homebranch"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
foreign key from the branches table for the library that owns this item (\s-1MARC21\s0 952$a)
.SS "price"
.IX Subsection "price"
.Vb 3
\&  data_type: \*(Aqdecimal\*(Aq
\&  is_nullable: 1
\&  size: [8,2]
.Ve
.PP
purchase price (\s-1MARC21\s0 952$g)
.SS "replacementprice"
.IX Subsection "replacementprice"
.Vb 3
\&  data_type: \*(Aqdecimal\*(Aq
\&  is_nullable: 1
\&  size: [8,2]
.Ve
.PP
cost the library charges to replace the item if it has been marked lost (\s-1MARC21\s0 952$v)
.SS "replacementpricedate"
.IX Subsection "replacementpricedate"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
the date the price is effective from (\s-1MARC21\s0 952$w)
.SS "datelastborrowed"
.IX Subsection "datelastborrowed"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
the date the item was last checked out
.SS "datelastseen"
.IX Subsection "datelastseen"
.Vb 3
\&  data_type: \*(Aqdatetime\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
the date the item was last see (usually the last time the barcode was scanned or inventory was done)
.SS "stack"
.IX Subsection "stack"
.Vb 2
\&  data_type: \*(Aqtinyint\*(Aq
\&  is_nullable: 1
.Ve
.SS "notforloan"
.IX Subsection "notforloan"
.Vb 3
\&  data_type: \*(Aqtinyint\*(Aq
\&  default_value: 0
\&  is_nullable: 0
.Ve
.PP
authorized value defining why this item is not for loan (\s-1MARC21 952$7\s0)
.SS "damaged"
.IX Subsection "damaged"
.Vb 3
\&  data_type: \*(Aqtinyint\*(Aq
\&  default_value: 0
\&  is_nullable: 0
.Ve
.PP
authorized value defining this item as damaged (\s-1MARC21 952$4\s0)
.SS "damaged_on"
.IX Subsection "damaged_on"
.Vb 3
\&  data_type: \*(Aqdatetime\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
the date and time an item was last marked as damaged, \s-1NULL\s0 if not damaged
.SS "itemlost"
.IX Subsection "itemlost"
.Vb 3
\&  data_type: \*(Aqtinyint\*(Aq
\&  default_value: 0
\&  is_nullable: 0
.Ve
.PP
authorized value defining this item as lost (\s-1MARC21 952$1\s0)
.SS "itemlost_on"
.IX Subsection "itemlost_on"
.Vb 3
\&  data_type: \*(Aqdatetime\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
the date and time an item was last marked as lost, \s-1NULL\s0 if not lost
.SS "withdrawn"
.IX Subsection "withdrawn"
.Vb 3
\&  data_type: \*(Aqtinyint\*(Aq
\&  default_value: 0
\&  is_nullable: 0
.Ve
.PP
authorized value defining this item as withdrawn (\s-1MARC21 952$0\s0)
.SS "withdrawn_on"
.IX Subsection "withdrawn_on"
.Vb 3
\&  data_type: \*(Aqdatetime\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
the date and time an item was last marked as withdrawn, \s-1NULL\s0 if not withdrawn
.SS "itemcallnumber"
.IX Subsection "itemcallnumber"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 255
.Ve
.PP
call number for this item (\s-1MARC21\s0 952$o)
.SS "coded_location_qualifier"
.IX Subsection "coded_location_qualifier"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
coded location qualifier(\s-1MARC21\s0 952$f)
.SS "issues"
.IX Subsection "issues"
.Vb 3
\&  data_type: \*(Aqsmallint\*(Aq
\&  default_value: 0
\&  is_nullable: 1
.Ve
.PP
number of times this item has been checked out
.SS "renewals"
.IX Subsection "renewals"
.Vb 2
\&  data_type: \*(Aqsmallint\*(Aq
\&  is_nullable: 1
.Ve
.PP
number of times this item has been renewed
.SS "reserves"
.IX Subsection "reserves"
.Vb 2
\&  data_type: \*(Aqsmallint\*(Aq
\&  is_nullable: 1
.Ve
.PP
number of times this item has been placed on hold/reserved
.SS "restricted"
.IX Subsection "restricted"
.Vb 2
\&  data_type: \*(Aqtinyint\*(Aq
\&  is_nullable: 1
.Ve
.PP
authorized value defining use restrictions for this item (\s-1MARC21 952$5\s0)
.SS "itemnotes"
.IX Subsection "itemnotes"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
public notes on this item (\s-1MARC21\s0 952$z)
.SS "itemnotes_nonpublic"
.IX Subsection "itemnotes_nonpublic"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
non-public notes on this item (\s-1MARC21\s0 952$x)
.SS "holdingbranch"
.IX Subsection "holdingbranch"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
foreign key from the branches table for the library that is currently in possession item (\s-1MARC21\s0 952$b)
.SS "timestamp"
.IX Subsection "timestamp"
.Vb 4
\&  data_type: \*(Aqtimestamp\*(Aq
\&  datetime_undef_if_invalid: 1
\&  default_value: current_timestamp
\&  is_nullable: 0
.Ve
.PP
date and time this item was last altered
.SS "deleted_on"
.IX Subsection "deleted_on"
.Vb 3
\&  data_type: \*(Aqdatetime\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
date/time of deletion
.SS "location"
.IX Subsection "location"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 80
.Ve
.PP
authorized value for the shelving location for this item (\s-1MARC21\s0 952$c)
.SS "permanent_location"
.IX Subsection "permanent_location"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 80
.Ve
.PP
linked to the \s-1CART\s0 and \s-1PROC\s0 temporary locations feature, stores the permanent shelving location
.SS "onloan"
.IX Subsection "onloan"
.Vb 3
\&  data_type: \*(Aqdate\*(Aq
\&  datetime_undef_if_invalid: 1
\&  is_nullable: 1
.Ve
.PP
defines if item is checked out (\s-1NULL\s0 for not checked out, and due date for checked out)
.SS "cn_source"
.IX Subsection "cn_source"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
classification source used on this item (\s-1MARC21 952$2\s0)
.SS "cn_sort"
.IX Subsection "cn_sort"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 255
.Ve
.PP
normalized form of the call number (\s-1MARC21\s0 952$o) used for sorting
.SS "ccode"
.IX Subsection "ccode"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 80
.Ve
.PP
authorized value for the collection code associated with this item (\s-1MARC21 952$8\s0)
.SS "materials"
.IX Subsection "materials"
.Vb 2
\&  data_type: \*(Aqmediumtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
materials specified (\s-1MARC21 952$3\s0)
.SS "uri"
.IX Subsection "uri"
.Vb 2
\&  data_type: \*(Aqmediumtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
\&\s-1URL\s0 for the item (\s-1MARC21\s0 952$u)
.SS "itype"
.IX Subsection "itype"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 10
.Ve
.PP
foreign key from the itemtypes table defining the type for this item (\s-1MARC21\s0 952$y)
.SS "more_subfields_xml"
.IX Subsection "more_subfields_xml"
.Vb 2
\&  data_type: \*(Aqlongtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
additional 952 subfields in \s-1XML\s0 format
.SS "enumchron"
.IX Subsection "enumchron"
.Vb 2
\&  data_type: \*(Aqmediumtext\*(Aq
\&  is_nullable: 1
.Ve
.PP
serial enumeration/chronology for the item (\s-1MARC21\s0 952$h)
.SS "copynumber"
.IX Subsection "copynumber"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 32
.Ve
.PP
copy number (\s-1MARC21\s0 952$t)
.SS "stocknumber"
.IX Subsection "stocknumber"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 32
.Ve
.PP
inventory number (\s-1MARC21\s0 952$i)
.SS "new_status"
.IX Subsection "new_status"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 32
.Ve
.PP
\&'new' value, you can put whatever free-text information. This field is intented to be managed by the automatic_item_modification_by_age cronjob.
.SS "exclude_from_local_holds_priority"
.IX Subsection "exclude_from_local_holds_priority"
.Vb 2
\&  data_type: \*(Aqtinyint\*(Aq
\&  is_nullable: 1
.Ve
.PP
Exclude this item from local holds priority
.SH "PRIMARY KEY"
.IX Header "PRIMARY KEY"
.IP "\(bu" 4
\&\*(L"itemnumber\*(R"
