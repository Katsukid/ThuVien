.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Template::Plugin::Asset 3pm"
.TH Koha::Template::Plugin::Asset 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Template::Plugin::Asset
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Asset plugin is a helper that generates \s-1HTML\s0 tags for \s-1JS\s0 and \s-1CSS\s0 files
.SH "SYNOPSYS"
.IX Header "SYNOPSYS"
.Vb 1
\&    [% USE Asset %]
\&
\&    [% Asset.css("css/datatables.css") %]
\&    [% Asset.js("js/datatables.js") %]
\&
\&    [%# With attributes %]
\&    [% Asset.css("css/print.css", { media = "print" }) %]
\&
\&    [%# If you only want the url and not the HTML tag %]
\&    [% url = Asset.url("css/datatables.css") %]
.Ve
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "new"
.IX Subsection "new"
Constructor. Do not use this directly.
.SS "js"
.IX Subsection "js"
Returns a <script> tag for the given \s-1JS\s0 file
.PP
.Vb 1
\&    [% Asset.js(\*(Aqjs/datatables.js\*(Aq) %]
.Ve
.SS "css"
.IX Subsection "css"
Returns a <link> tag for the given \s-1CSS\s0 file
.PP
.Vb 2
\&    [% Asset.css(\*(Aqcss/datatables.css\*(Aq) %]
\&    [% Asset.css(\*(Aqcss/print.css\*(Aq, { media = "print" }) %]
.Ve
.SS "url"
.IX Subsection "url"
Returns the \s-1URL\s0 for the given file
.PP
.Vb 1
\&    [% Asset.url(\*(Aqcss/datatables.css\*(Aq) %]
.Ve
.SS "_tag"
.IX Subsection "_tag"
Returns an \s-1HTML\s0 tag with given name and attributes.
This shouldn't be used directly.
