.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::CookieManager 3pm"
.TH Koha::CookieManager 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::CookieManager \- Object for unified handling of cookies in Koha
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Koha::CookieManager;
\&    my $mgr = Koha::CookieManager\->new;
\&
\&    # Replace cookies
\&    $cookie_list = $mgr\->replace_in_list( [ $cookie1, $cookie2_old ], $cookie2_new );
\&
\&    # Clear cookies (governed by deny list entries in koha\-conf)
\&    $cookie_list = $mgr\->clear_unless( $cookie1, $cookie2, $cookie3_name );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The current object allows you to clear cookies in a list based on the deny list
in koha\-conf.xml. It also offers a method to replace the old version of a cookie
by a new one.
.PP
It could be extended by (gradually) routing cookie creation through it in order
to consistently fill cookie parameters like httponly, secure and samesite flag,
etc. And could serve to register all our cookies in a central location.
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
.Vb 1
\&    my $mgr = Koha::CookieManager\->new({}); # parameters for extensions
.Ve
.SS "clear_unless"
.IX Subsection "clear_unless"
.Vb 1
\&    $cookies = $self\->clear_unless( $query\->cookie, @$cookies );
\&
\&    Arguments: either cookie names or cookie objects (CGI::Cookie).
\&    Note: in the example above $query\->cookie is a list of cookie names as returned
\&    by the CGI object.
\&
\&    Returns an arrayref of cookie objects: empty, expired cookies for those passed
\&    by name or objects that are not on the deny list, together with the remaining
\&    (untouched) cookie objects that are on the deny list.
.Ve
.SS "replace_in_list"
.IX Subsection "replace_in_list"
.Vb 1
\&    $list2 = $mgr\->replace_in_list( $list1, $cookie );
\&
\&    Add $cookie to $list1, removing older occurrences in list1.
\&    $list1 is a list of CGI::Cookie objects.
\&    $cookie must be a CGI::Cookie object; if it is not, only
\&    cookie objects in list1 are returned (filtering list1).
\&
\&    Returns an arrayref of CGI::Cookie objects.
.Ve
.SH "INTERNAL ROUTINES"
.IX Header "INTERNAL ROUTINES"
