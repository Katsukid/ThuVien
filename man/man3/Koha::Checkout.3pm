.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::Checkout 3pm"
.TH Koha::Checkout 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Checkout \- Koha Checkout object class
.SH "API"
.IX Header "API"
.SS "Class methods"
.IX Subsection "Class methods"
\fIis_overdue\fR
.IX Subsection "is_overdue"
.PP
my  \f(CW$is_overdue\fR = \f(CW$checkout\fR\->is_overdue( [ \f(CW$reference_dt\fR ] );
.PP
Return 1 if the checkout is overdue.
.PP
A reference date can be passed, in this case it will be used, otherwise today
will be the reference date.
.PP
\fIitem\fR
.IX Subsection "item"
.PP
my \f(CW$item\fR = \f(CW$checkout\fR\->item;
.PP
Return the checked out item
.PP
\fIaccount_lines\fR
.IX Subsection "account_lines"
.PP
my \f(CW$account_lines\fR = \f(CW$checkout\fR\->account_lines;
.PP
Return the checked out account_lines
.PP
\fIlibrary\fR
.IX Subsection "library"
.PP
my \f(CW$library\fR = \f(CW$checkout\fR\->library;
.PP
Return the library in which the transaction took place
.PP
\fIpatron\fR
.IX Subsection "patron"
.PP
my \f(CW$patron\fR = \f(CW$checkout\fR\->patron
.PP
Return the patron for who the checkout has been done
.PP
\fIissuer\fR
.IX Subsection "issuer"
.PP
my \f(CW$issuer\fR = \f(CW$checkout\fR\->issuer
.PP
Return the patron by whom the checkout was done
.PP
\fIrenewals\fR
.IX Subsection "renewals"
.PP
.Vb 1
\&  my $renewals = $checkout\->renewals;
.Ve
.PP
Return a Koha::Checkouts::Renewals set attached to this checkout
.PP
\fIto_api_mapping\fR
.IX Subsection "to_api_mapping"
.PP
This method returns the mapping for representing a Koha::Checkout object
on the \s-1API.\s0
.PP
\fIclaim_returned\fR
.IX Subsection "claim_returned"
.PP
.Vb 1
\&  my $return_claim = $checkout\->claim_returned();
.Ve
.PP
This method sets the checkout as claimed return.  It will:
.PP
1.  Add a new row to the `return_claims` table
2.  Set the item as lost using the 'ClaimReturnedLostValue'
3.  Charge a fee depending on the value of ClaimReturnedChargeFee
3a. If set to charge, then accruing overdues will be halted
3b. If set to charge, then any existing transfers will be cancelled
    and the holding branch will be set back to 'frombranch'.
4.  The issue will be marked as returned as per the 'MarkLostItemsAsReturned' preference
.SS "Internal methods"
.IX Subsection "Internal methods"
\fI_type\fR
.IX Subsection "_type"
.SH "AUTHOR"
.IX Header "AUTHOR"
Kyle M Hall <kyle@bywatersolutions.com>
.PP
Jonathan Druart <jonathan.druart@bugs.koha\-community.org>
