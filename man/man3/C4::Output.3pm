.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "C4::Output 3pm"
.TH C4::Output 3pm "2023-10-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::Output \- Functions for managing output, is slowly being deprecated
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.IP "pagination_bar" 2
.IX Item "pagination_bar"
.Vb 1
\&   pagination_bar($base_url, $nb_pages, $current_page, $startfrom_name)
.Ve
.Sp
Build an \s-1HTML\s0 pagination bar based on the number of page to display, the
current page and the url to give to each page link.
.Sp
\&\f(CW$base_url\fR is the \s-1URL\s0 for each page link. The
\&\f(CW$startfrom_name\fR=page_number is added at the end of the each \s-1URL.\s0
.Sp
\&\f(CW$nb_pages\fR is the total number of pages available.
.Sp
\&\f(CW$current_page\fR is the current page number. This page number won't become a
link.
.Sp
This function returns \s-1HTML,\s0 without any language dependency.
.IP "output_with_http_headers" 2
.IX Item "output_with_http_headers"
.Vb 1
\&   &output_with_http_headers($query, $cookie, $data, $content_type[, $status[, $extra_options]])
.Ve
.Sp
Outputs \f(CW$data\fR with the appropriate \s-1HTTP\s0 headers,
the authentication cookie \f(CW$cookie\fR and a Content-Type specified in
\&\f(CW$content_type\fR.
.Sp
If applicable, \f(CW$cookie\fR can be undef, and it will not be sent.
.Sp
\&\f(CW$content_type\fR is one of the following: 'html', 'js', 'json', 'opensearchdescription', 'xml', 'rss', or 'atom'.
.Sp
\&\f(CW$status\fR is an \s-1HTTP\s0 status message, like '403 Authentication Required'. It defaults to '200 \s-1OK\s0'.
.Sp
\&\f(CW$extra_options\fR is hashref.  If the key 'force_no_caching' is present and has
a true value, the \s-1HTTP\s0 headers include directives to force there to be no
caching whatsoever.
.IP "output_and_exit_if_error" 2
.IX Item "output_and_exit_if_error"
.Vb 1
\&    output_and_exit_if_error( $query, $cookie, $template, $params );
.Ve
.Sp
To executed at the beginning of scripts to stop the script at this point if
some errors are found.
.Sp
A series of tests can be run for a given module, or a specific check.
Params \*(L"module\*(R" and \*(L"check\*(R" are mutually exclusive.
.Sp
Tests for modules:
* members:
    \- Patron is not defined (we are looking for a patron that does no longer exist/never existed)
    \- The logged in user cannot see patron's infos (feature 'cannot_see_patron_infos')
.Sp
Tests for specific check:
* csrf_token
    will test if the csrf_token \s-1CGI\s0 param is valid
.Sp
Others will be added here depending on the needs (for instance biblio does not exist will be useful).
.IP "output_and_exit" 2
.IX Item "output_and_exit"
.Vb 1
\&    output_and_exit( $query, $cookie, $template, $error );
\&
\&    $error is a blocking error like biblionumber not found or so.
\&    We should output the error and exit.
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Koha Development Team <http://koha\-community.org/>
